////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ВАЛЮТАМИ

// ПОЛУЧЕНИЕ КУРСА ПО КОНКРЕТНОЙ ВАЛЮТЕ НА ДАТУ

// Возвращает курс валюты на дату
//
// Параметры:
//  Валюта     - Валюта (элемент справочника "Валюты")
//  ДатаКурса  - Дата, на которую следует получить курс
//
// Возвращаемое значение: 
//  Структура, содержащая:
//   Курс      - курс валюты
//   Кратность - кратность валюты
//
Функция ПолучитьКурсВалюты(БазоваяВалюта, Валюта, ДатаКурса) Экспорт
	
	Если НЕ ЗначениеЗаполнено(БазоваяВалюта) Тогда
		БазоваяВалюта = УА_ПривилегированныйСервер.ВалютаРеглУчета();	
	КонецЕсли;
			
	Если БазоваяВалюта = Валюта Тогда 
		Возврат Новый Структура("Курс, Кратность", 1, 1);
	КонецЕсли;
	
	КурсКратность = РегистрыСведений.КурсыВалют.КурсыВалютыПоДату(Валюта,ДатаКурса);
			
	КурсКратность.Курс 		= ?(КурсКратность.Курс = 0, 1, КурсКратность.Курс);
	КурсКратность.Кратность = ?(КурсКратность.Кратность = 0, 1, КурсКратность.Кратность);

	Возврат КурсКратность;
	
КонецФункции // ПолучитьКурсВалюты()

// Возвращает курс валюты на дату по портфелю
//
// Параметры:
//  Портфель   - Договор ДУ
//  Валюта     - Валюта (элемент справочника "Валюты")
//  ДатаКурса  - Дата, на которую следует получить курс
//
// Возвращаемое значение: 
//  Структура, содержащая:
//   Курс      - курс валюты
//   Кратность - кратность валюты
//
Функция ПолучитьКурсВалютыПоПортфелю(Портфель, Валюта, ДатаКурса) Экспорт
	
	БазоваяВалюта 		   = ОбщегоНазначенияДУ.ВалютаРеглУчета(Портфель);
	
	Возврат ПолучитьКурсВалюты(БазоваяВалюта, Валюта, ДатаКурса);	

КонецФункции // ПолучитьКурсВалютыПоПортфелю()

// ПОЛУЧЕНИЕ КУРСОВ ПО ДАТЕ

//Возвращает курсы валют на дату
//
// Параметры:
//  - Дата - Дата получения курсов валют
//
// Возвращаемое значение:
// Соответствие Ключ = Валюта, Значение = Структура(Курс,Кратность)
//
Функция КурсыВалютПоДате(БазоваяВалюта, ДатаКурсов, ИнформационнаяПлощадка = "") Экспорт
	
	Если НЕ ЗначениеЗаполнено(БазоваяВалюта) Тогда
		БазоваяВалюта = УА_ПривилегированныйСервер.ВалютаРеглУчета();	
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ИнформационнаяПлощадка) Тогда
		ИнформационнаяПлощадка = Справочники.ИнформационныеПлощадки.ЦБРФ;	
	КонецЕсли;
	
	Возврат МодульВалютногоУчетаПовтИсп.КурсыВалютПоДате(БазоваяВалюта, ДатаКурсов, ИнформационнаяПлощадка);
	
КонецФункции

//Возвращает курсы валют на дату  по порфелю
//
// Параметры:
//  - Дата     - Дата получения курсов валют
//  - Портфель - ДоговорДУ
//
// Возвращаемое значение:
// Соответствие Ключ = Валюта, Значение = Структура(Курс,Кратность)
//
Функция КурсыВалютПоДатеПоПортфелю(Портфель, ДатаКурсов) Экспорт
	
	БазоваяВалюта 		   = ОбщегоНазначенияДУ.ВалютаРеглУчета(Портфель);
	
	Если ЗначениеЗаполнено(Портфель) Тогда
		ИнформационнаяПлощадка = Портфель.ИнформационнаяПлощадка;
	Иначе
		ИнформационнаяПлощадка = Справочники.ИнформационныеПлощадки.ПустаяСсылка();
	КонецЕсли;
	
	Возврат МодульВалютногоУчетаПовтИсп.КурсыВалютПоДате(БазоваяВалюта, ДатаКурсов, ИнформационнаяПлощадка);
	
КонецФункции

// ПЕРЕСЧЕТ ИЗ ВАЛЮТЫ В ВАЛЮТУ

// Эта функция пересчитывает сумму из валюты ВалютаНач по курсу ПоКурсуНач 
// в валюту ВалютаКон по курсу ПоКурсуКон
//
// Параметры:      
//	Сумма          - сумма, которую следует пересчитать;
//	ВалютаНач      - ссылка на элемент справочника Валют;
//                   определяет валюту, из которой надо пересчитывать;
//	ВалютаКон      - ссылка на элемент справочника Валют;
//                   определяет валюту, в которую надо пересчитывать;
// 	ПоКурсуНач     - курс валюты, из которой надо пересчитать;
// 	ПоКурсуКон     - курс валюты, в которую надо пересчитать;
// 	ПоКратностьНач - кратность валюты, из которой надо пересчитать (по умолчанию = 1);
// 	ПоКратностьКон - кратность валюты, в которую надо пересчитать  (по умолчанию = 1);
//
// Возвращаемое значение: 
//  Сумма, пересчитанная в другую валюту
//
Функция ПересчитатьИзВалютыВВалюту(Сумма, ВалютаНач, ВалютаКон, Знач ПоКурсуНач, Знач ПоКурсуКон,
		Знач ПоКратностьНач = 1, Знач ПоКратностьКон = 1, Точность = 2) Экспорт

	Если (ВалютаНач = ВалютаКон) Тогда 	// Считаем, что пересчет не нужен.
		Возврат Сумма;
	ИначеЕсли (ПоКурсуНач = ПоКурсуКон) И (ПоКратностьНач = ПоКратностьКон) Тогда 
		Возврат Сумма;
	КонецЕсли;

	Если ПоКурсуНач = 0 Тогда
		ПоКурсуНач = 1;
	КонецЕсли;
	Если ПоКурсуКон = 0 Тогда
		ПоКурсуКон = 1;
	КонецЕсли;
	Если ПоКратностьНач = 0 Тогда
		ПоКратностьНач = 1;
	КонецЕсли;
	Если ПоКратностьКон = 0 Тогда
		ПоКратностьКон = 1;
	КонецЕсли;
	
	Результат = Окр((Сумма * ПоКурсуНач * ПоКратностьКон) / (ПоКурсуКон * ПоКратностьНач), Точность);
	Возврат Результат;

КонецФункции //ПересчитатьИзВалютыВВалюту()

// ПЕРЕСЧЕТ В ВАЛЮТУ РЕГЛ. УЧЕТА

// Эта функция пересчитывает сумму из валюты взаиморасчетов по переданному курсу 
// в валюту регламентированного учета.
//
// Параметры:
//  Портфель - ссылка на элемент справочника ДоговорыДУ, из которого берется 
//  валюта, в которую нужно пересчитать (Валюта регл.учета)
//	Сумма                    - сумма, которую следует пересчитать;
//	ВалютаРеглУчета           - ссылка на элемент справочника Валют, валюта регл. учета;
//	ВалютаВзаиморасчетов      - ссылка на элемент справочника Валют;
//                   определяет валюту, из которой надо пересчитывать;
//	КурсВзаиморасчетов       - курс валюты взаиморасчетов, по которому надо пересчитывать;
//	КратностьВзаиморасчетов  - кратность, по которой надо пересчитывать;
// 	Точность                 - число цифр после запятой для результата
//
// Возвращаемое значение: 
//  Сумма, пересчитанная в валюту взаиморасчетов
//
Функция ПересчитатьВВалютуУчета(Сумма, ВалютаВзаиморасчетов, ВалютаРеглУчета, КурсВзаиморасчетов = 0, КратностьВзаиморасчетов = 0, Точность = 2) Экспорт
	
	Если (ВалютаВзаиморасчетов = ВалютаРеглУчета) Тогда 	// Считаем, что пересчет не нужен.
		Возврат Сумма;
	КонецЕсли;
	
	Если КурсВзаиморасчетов = 0 Тогда
		КурсВзаиморасчетов = 1;
	КонецЕсли;
	Если КратностьВзаиморасчетов = 0 Тогда
		КратностьВзаиморасчетов = 1;
	КонецЕсли;	
	
	КурсВалютыУчета 			= 1;
	КратностьВалютыУчета 		= 1;
	
	Если (КурсВзаиморасчетов = КурсВалютыУчета) И (КратностьВзаиморасчетов = КратностьВалютыУчета) Тогда 
		Возврат Сумма;
	КонецЕсли;
	
	Результат = Окр((Сумма * КурсВзаиморасчетов * КратностьВалютыУчета) / (КурсВалютыУчета * КратностьВзаиморасчетов), Точность);
	
	Возврат Результат;

КонецФункции 

// Эта функция пересчитывает сумму из валюты взаиморасчетов по курсу на переданную дату  
// в валюту регламентированного учета.
//
// Параметры:  
//  Портфель - ссылка на элемент справочника ДоговорыДУ, из которого берется 
//  валюта, в которую нужно пересчитать (Валюта регл.учета)
//	Сумма          - сумма, которую следует пересчитать;
//	ВалютаВзаиморасчетов      - ссылка на элемент справочника Валют;
//                   определяет валюту, из которой надо пересчитывать;
// 	Дата     - дата на которую нужно получить курсы валют
// 	Точность                 - число цифр после запятой для результата
//
// Возвращаемое значение: 
//  Сумма, пересчитанная в другую валюту
//
Функция ПересчитатьВВалютуУчетаНаДатуПоПортфелю(Портфель, Сумма, ВалютаВзаиморасчетов, Знач ДатаКурса, Точность = 2) Экспорт
	
	ВалютаРеглУчета 		   = ОбщегоНазначенияДУ.ВалютаРеглУчета(Портфель);
		
	Если (ВалютаВзаиморасчетов = ВалютаРеглУчета) Тогда 	// Считаем, что пересчет не нужен.
		Возврат Сумма;
	КонецЕсли;
	
	КурсВалютаВзаиморасчетов = ПолучитьКурсВалюты(ВалютаРеглУчета, ВалютаВзаиморасчетов, ДатаКурса);			
	
	КурсВзаиморасчетов 			= КурсВалютаВзаиморасчетов.Курс;
	КратностьВзаиморасчетов 	= КурсВалютаВзаиморасчетов.Кратность;
	
	Возврат ПересчитатьВВалютуУчета(Сумма, ВалютаВзаиморасчетов, ВалютаРеглУчета, КурсВзаиморасчетов, КратностьВзаиморасчетов, Точность);
	
КонецФункции 

// РАССЧЕТ КРОСС-КУРСОВ

// Получает курс пары валют относительно третьей валюты с помощью расчета кросс-курса
// Параметры:
//  Валюта1     - Тип: элемент справочника "Валюты". Базовая валюта, в единицах которой рассчитываем курс 
//  Валюта2     - Тип: элемент справочника "Валюты". Валюта по отношению к которой получаем курс.
//  Дата         - Дата, на которую следует получить курс
//  Информационная площадка  - элемент справочника "Информационные площадки",
//        			по которому следует получить курс
//
// Возвращаемое значение: 
//  Структура, содержащая:
//   Курс      - курс валюты
//   Кратность - кратность валюты
//
Функция РассчитатьКроссКурс(Валюта1, Валюта2, ДатаКурса, ИнформационнаяПлощадка) Экспорт
	
	КроссКурс = Новый Структура("Курс, Кратность", 1, 1);
	
	БазоваяВалютаКроссКурсов =  УА_ПривилегированныйСервер.ВалютаРеглУчета();
	
	КурсыВалют = КурсыВалютПоДате(БазоваяВалютаКроссКурсов, ДатаКурса, ИнформационнаяПлощадка);
	КурсКратностьВалюта1 = КурсыВалют.Получить(Валюта1);
	КурсКратностьВалюта2 = КурсыВалют.Получить(Валюта2);

	Если КурсКратностьВалюта1 <> Неопределено И КурсКратностьВалюта2 <> Неопределено Тогда
	
		КроссКурс.Курс 		= КурсКратностьВалюта2.Курс		 / КурсКратностьВалюта1.Курс;
		КроссКурс.Кратность = КурсКратностьВалюта2.Кратность / КурсКратностьВалюта1.Кратность;
	
	КонецЕсли;
	
	Возврат КроссКурс;
	
КонецФункции // ПересчитатьПоКроссКурсу()
 

// ЕПС 

Функция КоэффициентПересчета(КурсИсточник, КратностьИсточник, КурсПриемник, КратностьПриемник) Экспорт
	
	Делитель = КурсПриемник * КратностьИсточник;
	Если Делитель = 0 Тогда
		Делитель = 1;
	КонецЕсли;
	
	КоэффициентПересчета = (КурсИсточник * КратностьПриемник) / Делитель;
	
	Возврат КоэффициентПересчета;
	
КонецФункции

