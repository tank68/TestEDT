#Область ПрограммныйИнтерфейс

Функция ПодготовитьСтруктуруТаблицыЗначений()
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = Документы.уа_ПереоценкаАмортизацияЦенныхБумаг.ПустаяСсылка().Активы.ВыгрузитьКолонки();
	
	// ТЗ.Колонки.Добавить("ЦеннаяБумага", Новый ОписаниеТипов("Справочник.уа_ФинансовыеИнструменты"));
	
	Возврат ТЗ;
КонецФункции

// Заполняет данные переоценки/амортизации
Функция РассчитатьПереоценкуАмортизацию(МоментВремени, Портфель, ОценочнаяКатегория) Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"	ВЫБРАТЬ 
	|		ЦеннаяБумага, 
	|		Валюта,
	|		МАКСИМУМ(ВЫБОР КОГДА ВидКотировки = ЗНАЧЕНИЕ(Перечисление.уа_ВидыКотировки.СправедливаяСтоимость) ТОГДА Значение ИНАЧЕ 0 КОНЕЦ) КАК СправедливаяСтоимость,
	|		МАКСИМУМ(ВЫБОР КОГДА ВидКотировки = ЗНАЧЕНИЕ(Перечисление.уа_ВидыКотировки.Купон) ТОГДА Значение ИНАЧЕ 0 КОНЕЦ) КАК Купон,
	|		МАКСИМУМ(ВЫБОР КОГДА ВидКотировки = ЗНАЧЕНИЕ(Перечисление.уа_ВидыКотировки.Номинал) ТОГДА Значение ИНАЧЕ 0 КОНЕЦ) КАК Номинал
	|	ПОМЕСТИТЬ ВТ_Котировки
	|	ИЗ РегистрСведений.уа_Котировки.СрезПоследних(&Дата)
	|	СГРУППИРОВАТЬ ПО ЦеннаяБумага, Валюта
	|	ИНДЕКСИРОВАТЬ ПО ЦеннаяБумага;     
	|	
	|	ВЫБРАТЬ Валюта, Курс, Кратность
	|	ПОМЕСТИТЬ ВТ_КурсыВалют
	|	ИЗ РегистрСведений.КурсыВалют.СрезПоследних(&Дата)
	|	ИНДЕКСИРОВАТЬ ПО Валюта;
	|			
	|	ВЫБРАТЬ 
	|		Партия, 
	|		ЦенаАмортизации,
	|		ЦенаНакопленногоДисконта,
	|		ДатаОкончанияАмортизации,
	|		ЭСП
	|	ПОМЕСТИТЬ ВТ_ПараметрыРасчетаАмортизации
	|	ИЗ РегистрСведений.уа_ПараметрыРасчетаАмортизации.СрезПоследних(&Дата, Портфель= &Портфель)
	|	ИНДЕКСИРОВАТЬ ПО Партия;
	|	
	|	ВЫБРАТЬ 
	|		О.ЦеннаяБумага,
	|		О.Партия,
	|		О.Валюта,
	|		О.КоличествоОстаток КАК Количество,
	|		О.СуммаОстаток КАК СуммаВал, 
	|		О.УКДОстаток КАК УКДВал,
	|		О.СуммаРезерваОстаток КАК СуммаРезерваПодОбесценениеВал,
	|		О.СуммаКупонаКПолучениюОстаток КАК СуммаКупонаКПолучениюВал,
	|		О.СуммаНоминалаКПолучениюОстаток КАК СуммаНоминалаКПолучениюВал,
	|		О.СуммаОстаток + О.СуммаАмортизацииОстаток + О.НКДОстаток + О.УКДОстаток + 
	|			О.СуммаПоложительнойПереоценкиОстаток + О.СуммаОтрицательнойПереоценкиОстаток + 
	|			О.СуммаПоложительнойКорректировкиОстаток + О.СуммаОтрицательнойКорректировкиОстаток +
	|			О.СуммаПоложительнойИндексацииНоминалаОстаток + О.СуммаОтрицательнойИндексацииНоминалаОстаток +
	|			О.СуммаРезерваОстаток + СуммаКупонаКПолучениюОстаток + СуммаНоминалаКПолучениюОстаток КАК БалансоваяСтоимостьВал,
	|		О.ПогашеннаяАмортизацияДисконтаОстаток КАК ПогашеннаяАмортизацияДисконта,
	|		ЕСТЬNULL(А.ЦенаАмортизации,0) КАК ЦенаАмортизации,
	|		ЕСТЬNULL(А.ЦенаНакопленногоДисконта,0) КАК ЦенаНакопленногоДисконта,
	|		О.Партия.Дата КАК ДатаНачалаАмортизации,
	|		А.ДатаОкончанияАмортизации,
	|		ЕСТЬNULL(А.ЭСП,0) КАК ЭСП,
	|		ЕСТЬNULL(К.СправедливаяСтоимость,0) КАК СправедливаяСтоимость,
	|		ЕСТЬNULL(К.Купон,0) КАК Купон,
	|		ЕСТЬNULL(К.Номинал,0) КАК Номинал,
	|		КВ.Курс КАК КурсЦБ,
	|		КВ.Кратность КАК КратностьЦБ			
	|	ИЗ РегистрНакопления.уа_РасчетыПоЦеннымБумагам.Остатки(&Дата, Портфель = &Портфель И ОценочнаяКатегория=&ОценочнаяКатегория) О
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.уа_ФинансовыеИнструменты ФИ ПО О.ЦеннаяБумага = ФИ.Ссылка И О.Валюта = ФИ.ВалютаНоминала
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыРасчетаАмортизации А ПО А.Партия = О.Партия     
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Котировки К ПО О.ЦеннаяБумага = К.ЦеннаяБумага  
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыВалют КВ ПО О.Валюта = КВ.Валюта
	|	УПОРЯДОЧИТЬ ПО О.ЦеннаяБумага, О.Партия АВТОУПОРЯДОЧИВАНИЕ;
	|	
	|	УНИЧТОЖИТЬ ВТ_Котировки;
	|	УНИЧТОЖИТЬ ВТ_КурсыВалют;
	|	УНИЧТОЖИТЬ ВТ_ПараметрыРасчетаАмортизации;";
	
	Дата = НачалоДня(МоментВремени.Дата);
	Запрос.УстановитьПараметр("Портфель", Портфель);
	Запрос.УстановитьПараметр("ОценочнаяКатегория", ОценочнаяКатегория);
	Запрос.УстановитьПараметр("Дата", Дата);	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени, ВидГраницы.Исключая));

	ТЗ = ПодготовитьСтруктуруТаблицыЗначений();
		
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ТЗ;
	КонецЕсли;
	
	ЦеннаяБумага = Неопределено;
	
	Выборка = Результат.Выбрать();	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЦеннаяБумага <> ЦеннаяБумага Тогда
			КоличествоОбщее 		= 0;	
			НКДВалОбщая 			= 0;
			СуммаПереоценкиВалОбщая = 0;
			ЦеннаяБумага 			= Выборка.ЦеннаяБумага;
		КонецЕсли;	
		
		Строка = ТЗ.Добавить();		
		Строка.ЦеннаяБумага 	= Выборка.ЦеннаяБумага;
		Строка.Партия 			= Выборка.Партия;	
		Строка.Валюта 			= Выборка.Валюта;
		Строка.КурсЦБ		 	= Выборка.КурсЦБ;
		Строка.КратностьЦБ		= Выборка.КратностьЦБ;		
				
		Строка.СуммаИндексацииНоминалаВал	= 0;
		Строка.СуммаИндексацииНоминала		= 0;
		Строка.СуммаАмортизацииВал 	= 0;
		Строка.СуммаАмортизации 	= 0;
		Строка.НКДВал 				= 0;
		Строка.НКД					= 0;
		Строка.СуммаКорректировкиВал= 0;
		Строка.СуммаКорректировки 	= 0;
		Строка.СуммаПереоценкиВал 	= 0;
		Строка.СуммаПереоценки  	= 0;			
		
		Если Выборка.ЦенаАмортизации <> 0 И Дата <= Выборка.ДатаОкончанияАмортизации Тогда
			Коэффициент = (Дата - Выборка.ДатаНачалаАмортизации)/(Выборка.ДатаОкончанияАмортизации - Выборка.ДатаНачалаАмортизации);
			// расчет премии
			Если Выборка.ЦенаАмортизации > 0 Тогда
				Строка.СуммаАмортизацииВал = Окр(Выборка.ЦенаАмортизации * Выборка.Количество * (1-Коэффициент), 2);
			// расчет дисконта
			ИначеЕсли Выборка.ЦенаАмортизации < 0 Тогда
				Строка.СуммаАмортизацииВал = Окр(Выборка.ЦенаНакопленногоДисконта * Выборка.Количество, 2) 
					+ Окр( Окр((Выборка.ЦенаАмортизации - Выборка.ЦенаНакопленногоДисконта) * Выборка.Количество, 2) * Коэффициент, 2)
					+ Выборка.ПогашеннаяАмортизацияДисконта;					
			КонецЕсли;
			Строка.СуммаАмортизации = Окр(Строка.СуммаАмортизацииВал * Выборка.КурсЦБ / Выборка.КратностьЦБ,2);
		КонецЕсли;
		
		// для индексированных бумаг
		Если Выборка.ЦеннаяБумага.ИндексируемыйНоминал Тогда
			Строка.СуммаИндексацииНоминалаВал	= (Выборка.Номинал + ?(Выборка.ЦенаАмортизации < 0, Выборка.ЦенаАмортизации,0) ) * Выборка.Количество - Выборка.СуммаОстаток;
			Строка.СуммаИндексацииНоминала 		= Окр(Строка.СуммаИндексацииНоминалаВал * Выборка.КурсЦБ / Выборка.КратностьЦБ,2);
		КонецЕсли;
		
		КоличествоОбщее 		= КоличествоОбщее + Выборка.Количество;
		
		Если Выборка.Купон > 0 Тогда
			Строка.НКДВал 			 	= Окр(Выборка.Количество * Выборка.Купон, 2);
			НКДВалОбщая				 	= НКДВалОбщая + Строка.НКДВал;		
			НКДВалРазница			  	= Окр(КоличествоОбщее * Выборка.Купон,2) - НКДВалОбщая;
			НКДВалОбщая					= НКДВалОбщая - НКДВалРазница;		 
			Строка.НКДВал				= Строка.НКДВал - НКДВалРазница - Выборка.УКДВал;
			Строка.НКД					= Окр(Строка.НКДВал * Выборка.КурсЦБ / Выборка.КратностьЦБ,2);
		КонецЕсли;
			
		Если ОценочнаяКатегория = Перечисления.уа_ОценочнаяКатегория.АктивыПоСправедливойСтоимостиПрибыль Тогда			
			Строка.СуммаПереоценкиВал 	= Окр(Выборка.Количество * Выборка.СправедливаяСтоимость,2);
			СуммаПереоценкиВалОбщая 	= СуммаПереоценкиВалОбщая + Строка.СуммаПереоценкиВал;
			СуммаПереоценкиВалРазница 	= Окр(КоличествоОбщее * Выборка.СправедливаяСтоимость,2) - СуммаПереоценкиВалОбщая;
			СуммаПереоценкиВалОбщая 	= СуммаПереоценкиВалОбщая - СуммаПереоценкиВалРазница;
			Строка.СуммаПереоценкиВал  	= Строка.СуммаПереоценкиВал - СуммаПереоценкиВалРазница 
				- Выборка.СуммаВал - Строка.СуммаАмортизацииВал - Строка.СуммаИндексацииНоминалаВал;
			Строка.СуммаПереоценки		= Окр(Строка.СуммаПереоценкиВал * Выборка.КурсЦБ / Выборка.КратностьЦБ,2);
			
		ИначеЕсли ОценочнаяКатегория = Перечисления.уа_ОценочнаяКатегория.АктивыПоАмортизированнойСтоимости Тогда
			Строка.СуммаКорректировкиВал=  Окр(Выборка.БалансоваяСтоимостьВал * Pow(1.0 + Выборка.ЭСП/100, 1/365), 2) 
				- (Выборка.СуммаВал + Строка.НКДВал + Выборка.УКДВал + Выборка.СуммаКупонаКПолучениюВал + Выборка.СуммаНоминалаКПолучениюВал + Строка.АмортизацияВал 
				+ Строка.СуммаИндексацииНоминалаВал + Строка.СуммаРезерваПодОбесценениеВал);
			Строка.СуммаКорректировки 	= Окр(Строка.СуммаКорректировкиВал * Выборка.КурсЦБ / Выборка.КратностьЦБ,2);
		КонецЕсли;			
		 		
	КонецЦикла;
	
	Возврат ТЗ;
КонецФункции
 
#КонецОбласти