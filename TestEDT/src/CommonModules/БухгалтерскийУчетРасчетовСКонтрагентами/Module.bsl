// ОБЩИЕ ФУНКЦИИ ДЛЯ УЧЕТА РАСЧЕТОВ С КОНТРАГЕНТАМИ
//                                      

// Функция возвращает возможные счета учета расчетов с контрагентом
//
// Параметры:
//  Портфель   - по которой выполняется поиск
//  Контрагент  - по которому выполняется поиск
//  Договор     - по которому выполняется поиск
//
// Возвращаемое значение:
//  Структура - структура, содержащая счета учета расчетов
// 
Функция ПолучитьСчетаРасчетовСКонтрагентом(Знач Портфель, Знач Контрагент, Знач Договор, Знач ВалютаРегламентированногоУчета = Неопределено) Экспорт

	Если НЕ ЗначениеЗаполнено(ВалютаРегламентированногоУчета) Тогда
		ВалютаРегламентированногоУчета = ОбщегоНазначенияДУ.ВалютаРеглУчета(Портфель); 
	КонецЕсли;
	
	ПС = ПланыСчетов.Хозрасчетный;

	Результат = Новый Структура("СчетУчетаРасчетовСПоставщиком, 
								|СчетУчетаРасчетовСПокупателем, 
								|СчетУчетаАвансовВыданных,								
								|СчетУчетаАвансовПолученных,
								|СчетУчетаРасчетовСКонтрагентом,
								|СчетУчетаЗатратКонтрагента",ПС.РасчетыЦБПокупка, ПС.РасчетыЦБПродажа,ПС.РасчетыПоАвансамВыданным, ПС.РасчетыПоАвансамПолученным,ПС.ПрочиеВзаиморасчеты,ПС.ПрочиеРасходыПрочие  );
	
	СписокГруппКонтрагентов = ОбщегоНазначенияДУ.ПолучитьСписокВышеСтоящихГрупп(Контрагент);
	
	СписокГруппДоговоров = ОбщегоНазначенияДУ.ПолучитьСписокВышеСтоящихГрупп(Договор);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Портфель",         Портфель);
	Запрос.УстановитьПараметр("Контрагент",        Контрагент);
	Запрос.УстановитьПараметр("Договор",           Договор);
	Запрос.УстановитьПараметр("ПустойПортфель",   Справочники.Портфели.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент",  Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойДоговор",     Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	
	Индекс = 1;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	" + Индекс + " КАК Приоритет,
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	
	|	Портфель   = &Портфель И
	|	Контрагент  = &Контрагент И
	|	Договор     = &Договор И НЕ &Договор = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаДоговоров Из СписокГруппДоговоров Цикл
		
		Запрос.УстановитьПараметр("ГруппаДоговоров" + Индекс, ГруппаДоговоров);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	" + Индекс + ",
		|	СчетУчетаРасчетовСПоставщиком,
		|	СчетУчетаАвансовВыданных,
		|	СчетУчетаРасчетовСПокупателем,
		|	СчетУчетаАвансовПолученных,
		|	СчетУчетаЗатратКонтрагента,
		|	СчетУчетаРасчетовСКонтрагентом
		|
		|ИЗ
		|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
		|
		|ГДЕ
		|	Портфель             = &Портфель И
		|	Контрагент            = &Контрагент И
		|	Договор               = &ГруппаДоговоров" + Индекс + "
		|";
		
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель   = &Портфель И
	|	Контрагент  = &Контрагент И
	|	Договор     = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаКонтрагентов Из СписокГруппКонтрагентов Цикл
		
		Запрос.УстановитьПараметр("ГруппаКонтрагентов" + Индекс, ГруппаКонтрагентов);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	" + Индекс + ",
		|	СчетУчетаРасчетовСПоставщиком,
		|	СчетУчетаАвансовВыданных,
		|	СчетУчетаРасчетовСПокупателем,
		|	СчетУчетаАвансовПолученных,
		|	СчетУчетаЗатратКонтрагента,
		|	СчетУчетаРасчетовСКонтрагентом
		|
		|ИЗ
		|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
		|
		|ГДЕ
		|	Портфель             = &Портфель И
		|	Контрагент            = &ГруппаКонтрагентов" + Индекс + " И
		|	Договор               = &ПустойДоговор
		|";
		
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель             = &Портфель И
	|	Контрагент            = &ПустойКонтрагент И
	|	Договор               = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаДоговоров Из СписокГруппДоговоров Цикл
		
		Запрос.УстановитьПараметр("ГруппаДоговоров" + Индекс, ГруппаДоговоров);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	" + Индекс + ",
		|	СчетУчетаРасчетовСПоставщиком,
		|	СчетУчетаАвансовВыданных,
		|	СчетУчетаРасчетовСПокупателем,
		|	СчетУчетаАвансовПолученных,
		|	СчетУчетаЗатратКонтрагента,
		|	СчетУчетаРасчетовСКонтрагентом
		|
		|ИЗ
		|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
		|
		|ГДЕ
		|	Портфель             = &ПустойПортфель И
		|	Контрагент            = &Контрагент И
		|	Договор               = &ГруппаДоговоров" + Индекс + "
		|";
		
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель   = &ПустойПортфель И
	|	Контрагент  = &Контрагент И
	|	Договор     = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаКонтрагентов Из СписокГруппКонтрагентов Цикл
		
		Запрос.УстановитьПараметр("ГруппаКонтрагентов" + Индекс, ГруппаКонтрагентов);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	" + Индекс + ",
		|	СчетУчетаРасчетовСПоставщиком,
		|	СчетУчетаАвансовВыданных,
		|	СчетУчетаРасчетовСПокупателем,
		|	СчетУчетаАвансовПолученных,
		|	СчетУчетаЗатратКонтрагента,
		|	СчетУчетаРасчетовСКонтрагентом
		|
		|ИЗ
		|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
		|
		|ГДЕ
		|	Портфель             = &ПустойПортфель И
		|	Контрагент            = &ГруппаКонтрагентов" + Индекс + " И
		|	Договор               = &ПустойДоговор
		|";
		
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель             = &Портфель И
	|	Контрагент            = &Контрагент И
	|	Договор               = &Договор И НЕ &Договор = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель             = &Портфель И
	|	Контрагент            = &Контрагент И
	|	Договор               = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель             = &Портфель И
	|	Контрагент            = &ПустойКонтрагент И
	|	Договор               = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель             = &ПустойПортфель И
	|	Контрагент            = &ПустойКонтрагент И
	|	Договор               = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Индекс + ",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаЗатратКонтрагента,
	|	СчетУчетаРасчетовСКонтрагентом
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|
	|ГДЕ
	|	Портфель             = &ПустойПортфель И
	|	Контрагент            = &ПустойКонтрагент И
	|	Договор               = &ПустойДоговор
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда

		Результат.СчетУчетаРасчетовСПоставщиком    	= Выборка.СчетУчетаРасчетовСПоставщиком;
		Результат.СчетУчетаАвансовВыданных     		= Выборка.СчетУчетаАвансовВыданных;
		Результат.СчетУчетаРасчетовСПокупателем    	= Выборка.СчетУчетаРасчетовСПокупателем;
		Результат.СчетУчетаАвансовПолученных     	= Выборка.СчетУчетаАвансовПолученных;
		Результат.СчетУчетаРасчетовСКонтрагентом	= Выборка.СчетУчетаРасчетовСКонтрагентом;
		Результат.СчетУчетаЗатратКонтрагента	    = Выборка.СчетУчетаЗатратКонтрагента;

	КонецЕсли;

	Возврат Результат;

КонецФункции // ПолучитьСчетаРасчетовСКонтрагентом()

// Функция определяет направление движения для документа движения денежных средств
//
// Параметры:
//  ВидДокумента   - вид переданного документа
//  ВидОперации    - вид операции переданного документа
//
// Возвращаемое значение:
//  ВидДействийДокумента - структура, содержащая направление и признак Расчет/Возврат
// 
Функция ОпределениеНаправленияДвиженияДляДокументаДвиженияДенежныхСредств(Знач ВидДокумента,ВидОперации = неопределено) Экспорт

	ВидДействийДокумента = Новый Структура("Направление,РасчетыВозврат");
	ВидыДокументовДДС    = Новый Соответствие();

	ВидыДокументовДДС.Вставить("СписаниеСРасчетногоСчета", "Выбытие");
	ВидыДокументовДДС.Вставить("РасходныйКассовыйОрдер", "Выбытие");
	ВидыДокументовДДС.Вставить("ПоступлениеНаРасчетныйСчет", "Поступление");
	ВидыДокументовДДС.Вставить("ПриходныйКассовыйОрдер", "Поступление");

	ВидыДокументовДДС.Вставить("АвансовыйОтчет", "Выбытие");
	ВидыДокументовДДС.Вставить("ВозвратТоваровПоставщику", "Поступление");
	ВидыДокументовДДС.Вставить("ДокументРасчетовСКонтрагентом", "Поступление");
	
	
	
	ВидОперацииРасчет  = Перечисления.РасчетыВозврат.Расчеты;
	ВидОперацииВозврат = Перечисления.РасчетыВозврат.Возврат;
	
	Если ТипЗнч(ВидДокумента) = Тип("Строка") Тогда
		// Получен непосредственно вид документа
		// Дополнительные действия не требуются
		
		ВидДействийДокумента.Вставить("Направление",ВидыДокументовДДС[ВидДокумента]);
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВидДокумента)) Тогда
		ТипСсылки = ТипЗнч(ВидДокумента);
		// Получена ссылка на документ. Необходимо определить его вид.
	    Для каждого ТекущееЗначениеСоответсвия Из ВидыДокументовДДС Цикл
			Если ТипСсылки = Тип("ДокументСсылка."+ТекущееЗначениеСоответсвия.Ключ) Тогда
				ВидДействийДокумента.Вставить("Направление",ТекущееЗначениеСоответсвия.Значение);
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
		// Специфическая обработка
		//Если ТипСсылки = Тип("ДокументСсылка.АвансовыйОтчет") тогда
		//	ВидДействийДокумента.Вставить("РасчетыВозврат", ВидОперацииРасчет);
		//	Возврат ВидДействийДокумента;
		//ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ВозвратТоваровПоставщику") тогда
		//	ВидДействийДокумента.Вставить("РасчетыВозврат", ВидОперацииВозврат);
		//	Возврат ВидДействийДокумента;
		//ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом") тогда
		//	ВидДействийДокумента.Вставить("РасчетыВозврат", ВидОперацииРасчет);
		//	Возврат ВидДействийДокумента;
		//КонецЕсли;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ВидОперации) тогда

		//Определение вида операции

		РасчетВозвратПоВидуОпераций = Новый Соответствие();

		//РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийРКО.ОплатаПоставщику,ВидОперацииРасчет);
		//РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийРКО.ВозвратПокупателю,ВидОперацииВозврат);

		//РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПКО.ОплатаПокупателя,ВидОперацииРасчет);
		//РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика,ВидОперацииВозврат);

		РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику,ВидОперацииРасчет);
		РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю,ВидОперацииВозврат);

		РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя,ВидОперацииРасчет);
		РасчетВозвратПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика,ВидОперацииВозврат);

		ВидДействийДокумента.Вставить("РасчетыВозврат",РасчетВозвратПоВидуОпераций[ВидОперации]);

	ИначеЕсли ВидДокумента="АвансовыйОтчет" тогда
		ВидДействийДокумента.Вставить("РасчетыВозврат", ВидОперацииРасчет);
	ИначеЕсли ВидДокумента="ВозвратТоваровПоставщику" тогда
		ВидДействийДокумента.Вставить("РасчетыВозврат", ВидОперацииВозврат);
	ИначеЕсли ВидДокумента="ДокументРасчетовСКонтрагентом" тогда
		ВидДействийДокумента.Вставить("РасчетыВозврат", ВидОперацииРасчет);
	Конецесли;

	Возврат ВидДействийДокумента;

КонецФункции


