////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ РАБОТЫ  СО СЧЕТАМИ И СУБКОНТО

// Процедура установки типа и доступности субконто в зависимости от выбранного счета
//
// Параметры:
//  Счет - счет учета
//  Форма - форма
//  ПоляФормы - переданные поля формы
//  ЗаголовкиПолей - переданные заголовки полей
//  ЭтоТаблица - флаг для определения, таблица ли передана в процедуру
//  
Процедура ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей = Неопределено, ЭтоТаблица = Ложь) Экспорт
	
	ДанныеСчета = БухгалтерскийУчетПовтИсп.ПолучитьСвойстваСчета(Счет);
	
	Для Индекс = 1 По 3 Цикл
		Если Индекс <= ДанныеСчета.КоличествоСубконто Тогда
			Если ЭтоТаблица Тогда
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				КонецЕсли;
			Иначе
				Если ЗаголовкиПолей <> Неопределено И ЗаголовкиПолей.Свойство("Субконто" + Индекс) Тогда
					Форма[ЗаголовкиПолей["Субконто" + Индекс]] = ДанныеСчета["ВидСубконто" + Индекс + "Наименование"] + ":";
				КонецЕсли;
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Заголовок 		= ДанныеСчета["ВидСубконто" + Индекс + "Наименование"];
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Видимость     	= Истина;
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа 	= ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				КонецЕсли;
			КонецЕсли;
		Иначе 
			// Ничего делать не надо, т.к. не доступные поля будут скрыты
			Если Не ЭтоТаблица Тогда
				Если ЗаголовкиПолей <> Неопределено И ЗаголовкиПолей.Свойство("Субконто" + Индекс) Тогда
					Форма[ЗаголовкиПолей["Субконто" + Индекс]] = "";
				КонецЕсли;
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Заголовок 	 	= "";
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Видимость     	= Ложь;
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа 	= Новый ОписаниеТипов("Неопределено");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура установки типа и видимости субконто в зависимости от выбранного счета
//
// Параметры:
//  Счет - счет учета
//  Форма - форма
//  ПоляФормы - переданные поля формы
//  ЗаголовкиПолей - переданные заголовки полей
//  ЭтоТаблица - флаг для определения, таблица ли передана в процедуру
//  
Процедура ПриВыбореСчетаВидимость(Счет, Форма, ПоляФормы, ЗаголовкиПолей = Неопределено, ЭтоТаблица = Ложь) Экспорт
	
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда     
		ДанныеСчета = БухгалтерскийУчетПовтИсп.ПолучитьСвойстваСчета(Счет);
	Иначе                                                              		
		ДанныеСчета = УчетЕПСПовтИсп.СвойстваСчета(Счет);//NFO-79
	КонецЕсли;                                                         
	
	Для Индекс = 1 По 3 Цикл
		Если Индекс <= ДанныеСчета.КоличествоСубконто Тогда
			Если ЭтоТаблица Тогда
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				КонецЕсли;
			Иначе
				Если ЗаголовкиПолей <> Неопределено И ЗаголовкиПолей.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ЗаголовкиПолей["Субконто" + Индекс]].Видимость = Истина;
					Форма[ЗаголовкиПолей["Субконто" + Индекс]] = ДанныеСчета["ВидСубконто" + Индекс + "Наименование"] + ":";
				КонецЕсли;
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Заголовок 	   = ДанныеСчета["ВидСубконто" + Индекс + "Наименование"];
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Видимость       = Истина;
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				КонецЕсли;
			КонецЕсли;
		Иначе 
			// Ничего делать не надо, т.к. не доступные поля будут скрыты
			Если Не ЭтоТаблица Тогда
				Если ЗаголовкиПолей <> Неопределено И ЗаголовкиПолей.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ЗаголовкиПолей["Субконто" + Индекс]].Видимость = Ложь;
					Форма[ЗаголовкиПолей["Субконто" + Индекс]] = "";
				КонецЕсли;
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Видимость       = Ложь;
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура установки типа и доступности субконто при изменении счета
//
// Параметры:
//  Счет - счет учета
//  Объект - объект
//  ПоляОбъекта - переданные поля объекта
//  ЭтоТаблица - флаг для определения, таблица ли передана в процедуру
//  
Процедура ПриИзмененииСчета(Счет, Объект, ПоляОбъекта, ЭтоТаблица = Ложь) Экспорт

	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда     
		ДанныеСчета = БухгалтерскийУчетПовтИсп.ПолучитьСвойстваСчета(Счет);
	Иначе                                                              		
		ДанныеСчета = УчетЕПСПовтИсп.СвойстваСчета(Счет);//NFO-79
	КонецЕсли;  
	
	Для Индекс = 1 По 3 Цикл
		Если Индекс <= ДанныеСчета.КоличествоСубконто Тогда
			Если ПоляОбъекта.Свойство("Субконто" + Индекс) Тогда
				Объект[ПоляОбъекта["Субконто" + Индекс]] = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"].ПривестиЗначение(Объект[ПоляОбъекта["Субконто" + Индекс]]);
				Если ЭтоТаблица Тогда
					Объект[ПоляОбъекта["Субконто" + Индекс] + "Доступность"] = Истина;
				КонецЕсли;	
			КонецЕсли;
		Иначе 
			Если ПоляОбъекта.Свойство("Субконто" + Индекс) Тогда
				Объект[ПоляОбъекта["Субконто" + Индекс]] = Неопределено;
				Если ЭтоТаблица Тогда
					Объект[ПоляОбъекта["Субконто" + Индекс] + "Доступность"] = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура изменяет параметры выбора полей субконто
//
// Параметры:
//  Форма - форма
//  Объект - объект
//  ШаблонИмяПоляОбъекта - переданный шаблон имени поля объекта
//  ШаблонИмяЭлементаФормы - шаблон имени элемента формы
//  СписокПараметров - список параметров
//  
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, Объект, ШаблонИмяПоляОбъекта, ШаблонИмяЭлементаФормы, СписокПараметров) Экспорт
		
	МассивПараметров = Новый Массив();
	Для Индекс = 1 По 3 Цикл
		ИмяПоляОбъекта   = СтрЗаменить(ШаблонИмяПоляОбъекта  , "%Индекс%", Индекс);
		ИмяЭлементаФормы = СтрЗаменить(ШаблонИмяЭлементаФормы, "%Индекс%", Индекс);
		Если ТипЗнч(Объект[ИмяПоляОбъекта]) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
			Если СписокПараметров.Свойство("Контрагент") Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СписокПараметров.Контрагент));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект[ИмяПоляОбъекта]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			Если СписокПараметров.Свойство("Портфель") И ЗначениеЗаполнено(СписокПараметров.Портфель) Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Портфель", СписокПараметров.Портфель));
			КонецЕсли;
			Если СписокПараметров.Свойство("Контрагент") Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СписокПараметров.Контрагент));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект[ИмяПоляОбъекта]) = Тип("СправочникСсылка.КупонныеПериоды") Тогда
			Если СписокПараметров.Свойство("Облигации") Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СписокПараметров.Облигации));
			КонецЕсли;
		КонецЕсли;
		Если МассивПараметров.Количество() > 0 Тогда
			ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
			Форма.Элементы[ИмяЭлементаФормы].ПараметрыВыбора = ПараметрыВыбора;
			МассивПараметров.Очистить();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Процедура установки доступности субконто в зависимости от выбранного счета
//	Счет			 - <План счетов> - Счет, для которого необходимо настроить тип и видимость субконто
//	Объект			 - <Управляемая форма> ИЛИ <Строка табличной части> - Объект, который содержит ПоляФормы
//	ПоляОбъекта		 - <Структура> - Ключи, которой Субконто1, Субконто2, Субконто3, 
//									 а значения имена соответствующих полей на форме (поля субконто)
//	СкрыватьСубконто - <Булево>		 - Признак того, нужно ли для этой формы дополнительно скрывать субконто, влияет на выполнении функции НужноСкрытьСубконто
//
Процедура УстановитьДоступностьСубконто(Счет, Объект, ПоляОбъекта, СкрыватьСубконто = Истина) Экспорт
	
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда     
		ДанныеСчета = БухгалтерскийУчетПовтИсп.ПолучитьСвойстваСчета(Счет);
	Иначе                                                              		
		ДанныеСчета = УчетЕПСПовтИсп.СвойстваСчета(Счет);//NFO-79
	КонецЕсли;  
	
	Для Индекс = 1 По 3 Цикл
		Если ПоляОбъекта.Свойство("Субконто" + Индекс) Тогда
			ТипЗначенияСубконто = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
			Если НужноСкрытьСубконто(СкрыватьСубконто, ТипЗначенияСубконто) Тогда
				Объект[ПоляОбъекта["Субконто" + Индекс] + "Доступность"] = Ложь;
			Иначе
				Объект[ПоляОбъекта["Субконто" + Индекс] + "Доступность"] = (Индекс <= ДанныеСчета.КоличествоСубконто);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПоляОбъекта.Свойство("Подразделение") Тогда
		Объект[ПоляОбъекта["Подразделение"] + "Доступность"] = ДанныеСчета.УчетПоПодразделениям;
	КонецЕсли;
	
	Если ПоляОбъекта.Свойство("Валютный") Тогда
		Объект[ПоляОбъекта["Валютный"] + "Доступность"] = ДанныеСчета.Валютный;
	КонецЕсли;
	
	Если ПоляОбъекта.Свойство("Количественный") Тогда
		Объект[ПоляОбъекта["Количественный"] + "Доступность"] = ДанныеСчета.Количественный;
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет, нужно ли скрывать данное субконто
//
// Параметры:
//	СкрыватьСубконто - Булево - - Признак того, нужно ли для этой формы дополнительно скрывать субконто
//	ТипЗначенияСубконто - Описание типов 
//
Функция НужноСкрытьСубконто(СкрыватьСубконто, ТипЗначенияСубконто)
	
	Если СкрыватьСубконто Тогда
		Возврат Ложь;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

// Процедура установки значения субконто в документ
//
// Параметры:
//  Объект - объект
//  ПоляОбъекта - Структура - переданные поля объекта
//  Счет - ПланСчетовСсылкаХозрасчетный, ПланСчетовСсылка.ЕПС - счет учета
//  ИмяСубконто - Строка -
//  ЗначениеСубконто - Произвольный - устанавливаемое значение субконто
//
Процедура УстановитьСубконтоВДокумент(Объект, ПоляОбъекта, Счет, ИмяСубконто, ЗначениеСубконто) Экспорт

	Если НЕ ЗначениеЗаполнено(ИмяСубконто) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда     
		СвойстваСчета = БухгалтерскийУчетПовтИсп.ПолучитьСвойстваСчета(Счет);
		ВидСубконто = ПредопределенноеЗначение(СтрШаблон("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.%1", ИмяСубконто));	
	Иначе                                                              		
		СвойстваСчета = УчетЕПСПовтИсп.СвойстваСчета(Счет);
		ВидСубконто = ПредопределенноеЗначение(СтрШаблон("ПланВидовХарактеристик.ВидыСубконтоЕПС.%1", ИмяСубконто));
	КонецЕсли;	
		
	Для Индекс = 1 По 3 Цикл
		Если ПоляОбъекта.Свойство("Субконто" + Индекс) Тогда
			Если СвойстваСчета["ВидСубконто" + Индекс] <> Неопределено И СвойстваСчета["ВидСубконто" + Индекс + "ТипЗначения"].СодержитТип(ТипЗнч(ЗначениеСубконто)) Тогда
				Объект[ПоляОбъекта["Субконто" + Индекс]] = ЗначениеСубконто;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
				
КонецПроцедуры