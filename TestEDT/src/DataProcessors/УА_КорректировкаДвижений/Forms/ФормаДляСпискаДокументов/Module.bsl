&НаСервере
Перем СписокПроведеныхДокументов;
Перем СписокРегистраторов;
Перем Портфель;

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокПроведеныхДокументов 	= Новый Соответствие;
	СписокРегистраторов 		= Новый Массив;
	
	Если Параметры.Свойство("СписокДокументовБП") Тогда
		КоличествоДокументов = Параметры.СписокДокументовБП.Количество();
	Иначе
		КоличествоДокументов = Параметры.СписокДокументов.Количество(); 
	КонецЕсли;
	
	ТекстЗаголовка = НСтр("ru = 'Движения документов: '") + КоличествоДокументов;
	Заголовок = ТекстЗаголовка;
	
	Если Параметры.СписокДокументов.Количество()=0 тогда
		ТекстСообщения = НСтр("ru = 'Список документов пуст'");
		Сообщить(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	Иначе

		Для каждого ТекДокумент из Параметры.СписокДокументов Цикл
			
			Если НЕ БухгалтерскийУчет.ДокументПроведен(ТекДокумент.Значение) тогда продолжить; КонецЕсли;
			
			МетаданныеДокумента = ТекДокумент.Значение.Метаданные();
			
			СписокПроведеныхДокументов.Вставить(ТекДокумент.Значение, МетаданныеДокумента);
			СписокРегистраторов.Добавить(ТекДокумент.Значение);
			
		Конеццикла;
		
		Если СписокПроведеныхДокументов.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Список не содержит проведенных документов'");
			Сообщить(ТекстСообщения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Портфель = СписокРегистраторов[0].Портфель;
		
	КонецЕсли; 
	
	ЗаполнитьТаблицуРегистров();
	
	СоздатьРеквизитыФормы();
	
	СоздатьЭлементыФормы();
	
	УстановитьВозможностьРедактированияЗаписей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	ПовторноеОткрытиеСервер();
	
КонецПроцедуры


#КонецОбласти

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ШАПКИ_ФОРМЫ

#КонецОбласти

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ТАБЛИЦ_ФОРМЫ

&НаКлиенте
Процедура ЕПСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяРеквизита = ИмяРеквизитаПоляНаСервере(Поле.Имя);
	Значение = Элемент.ТекущиеДанные[ИмяРеквизита];
	ПоказатьЗначение(,Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ХозрасчетныйВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяРеквизита = ИмяРеквизитаПоляНаСервере(Поле.Имя);
	Значение = Элемент.ТекущиеДанные[ИмяРеквизита];
	ПоказатьЗначение(,Значение);
	
КонецПроцедуры

#КонецОбласти

#Область ОБРАБОТЧИКИ_КОМАНД_ФОРМЫ

&НаКлиенте
Процедура ОткрытьЭлемент(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#Область СЛУЖЕБНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ

&НаСервере
Функция ОпределитьНаличиеДвижений(МетаданныеДокумента = Неопределено, ДокументСсылка)
	
	Если МетаданныеДокумента.Движения.Количество() = 0 Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	ТекстЗапроса = "";	
	
	Для Каждого Движение ИЗ МетаданныеДокумента.Движения Цикл
		// В запросе получаем имена регистров, по которым есть хотя бы одно движение
		// например,
		// ВЫБРАТЬ Первые 1 «РегистрНакопления.ТоварыНаСкладах»
		// ИЗ РегистрНакопления.ТоварыНаСкладах
		// ГДЕ Регистратор = &Регистратор.
		
		ТекстЗапроса = ТекстЗапроса + "
		|" + ?(ТекстЗапроса = "", "", "ОБЪЕДИНИТЬ ВСЕ ") + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ """ + Движение.ПолноеИмя() +  """ КАК Имя,"""+Движение.Имя+ """ Как ИмяРегистра  ИЗ " 
		+ Движение.ПолноеИмя() + " ГДЕ Регистратор = &Регистратор";
		
	КонецЦикла;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЗапроса;			
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуРегистров()
	
	Объект.Регистры.Очистить();
	
	НайденныеРегистры = Новый Соответствие;
	Для Каждого ТекЭлемент из СписокПроведеныхДокументов цикл
		
		ДокументСсылка 		= ТекЭлемент.Ключ;
		МетаданныеДокумента = ТекЭлемент.Значение;
		
		ТаблицаДвижений = ОпределитьНаличиеДвижений(МетаданныеДокумента, ДокументСсылка);
		Если ТаблицаДвижений.Количество()= 0 Тогда Продолжить; КонецЕсли;
		
		Для каждого МетаданныеРегистра Из МетаданныеДокумента.Движения Цикл
			
			ПолноеИмя = МетаданныеРегистра.ПолноеИмя();
			
			Если ТаблицаДвижений.Найти(ПолноеИмя, "Имя") = Неопределено тогда продолжить; КонецЕсли; //Нет движений
			
			Если НайденныеРегистры.Получить(ПолноеИмя)<>Неопределено тогда Продолжить; КонецЕсли;
			НайденныеРегистры.Вставить(ПолноеИмя,Истина);
			
			Строка = Объект.Регистры.Добавить();
			Строка.Имя = МетаданныеРегистра.Имя;
			
			ПозицияТочки = Найти(ПолноеИмя, ".");
			ТипРегистра = Лев(ПолноеИмя, ПозицияТочки - 1);
			Строка.ТипРегистра = ТипРегистра;
			Строка.Синоним = МетаданныеРегистра.Синоним;
			
			Строка.ЕстьДвижения = Истина;
			Строка.Отображение 	= Строка.ЕстьДвижения;
			
		КонецЦикла;
		
		// Первым показывается регистр бухгалтерии, затем регистры накопления, затем - сведений.
		Объект.Регистры.Сортировать("ТипРегистра, Синоним");
		
	Конеццикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыФормы()
	
	ПоказатьХозрасчетный = Ложь;
	ПоказатьЕПС = Ложь;
	
	Для каждого СтрокаРегистра Из Объект.Регистры Цикл
		
		Если СтрокаРегистра.Имя = "Хозрасчетный" Тогда
			ПоказатьХозрасчетный = СтрокаРегистра.Отображение;
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРегистра.Имя = "ЕПС" Тогда
			ПоказатьЕПС = СтрокаРегистра.Отображение;
			Продолжить;
		КонецЕсли;

		// Создаем страницу для регистра в "правильном" месте между "предопределенными" закладками.
		ИмяГруппы = "Группа" + СтрокаРегистра.Имя;
		ТекГруппа = Элементы.Найти(ИмяГруппы);
		Если ТекГруппа = Неопределено Тогда
			
			Если СтрокаРегистра.ТипРегистра = "РегистрБухгалтерии" Тогда
				
				ТекГруппа = Элементы.Вставить(
				ИмяГруппы, 
				Тип("ГруппаФормы"), 
				Элементы.ГруппаДвиженияРегистров);
				
			ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрНакопления" Тогда
				
				ТекГруппа = Элементы.Вставить(
				ИмяГруппы, 
				Тип("ГруппаФормы"), 
				Элементы.ГруппаДвиженияРегистров);
				
			ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрСведений" Тогда
				
				ТекГруппа = Элементы.Вставить(
				ИмяГруппы, 
				Тип("ГруппаФормы"), 
				Элементы.ГруппаДвиженияРегистров);
				
			Иначе
				Продолжить;
			КонецЕсли;
			
			ТекГруппа.Заголовок = СтрокаРегистра.Синоним;
			
		КонецЕсли;
		
		// Делаем страницу регистра невидимой, если она не нужна
		ТекГруппа.Видимость = СтрокаРегистра.Отображение;
		Если НЕ СтрокаРегистра.Отображение Тогда
			Продолжить;
		КонецЕсли;
		
		// На странице регистра создаем таблицу
		ИмяТаблицы = СтрокаРегистра.Имя;
		ТекТаблица = Элементы.Найти(ИмяТаблицы);
		Если ТекТаблица <> Неопределено Тогда
			Элементы.Удалить(ТекТаблица);
		КонецЕсли;
		ТекТаблица = Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"), ТекГруппа);
		ТекТаблица.ПутьКДанным = СтрокаРегистра.Имя;
		// Назначаем общий обработчик
		ТекТаблица.УстановитьДействие("ПриНачалеРедактирования", "ТаблицаРегистраПриНачалеРедактирования");
		
		// Определяем набор колонок для таблицы, соответствующих метаданным регистра
		Если СтрокаРегистра.ТипРегистра = "РегистрНакопления" Тогда
			НаборЗаписей = РегистрыНакопления[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрСведений" Тогда
			НаборЗаписей = РегистрыСведений[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрБухгалтерии" Тогда
			НаборЗаписей = РегистрыБухгалтерии[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		КонецЕсли;
		РеквизитыНабораЗаписей = НаборЗаписей.ВыгрузитьКолонки();
		
		// Некоторые колонки не надо показывать
		РеквизитыНабораЗаписей.Колонки.Удалить("Регистратор");
		РеквизитыНабораЗаписей.Колонки.Удалить("Активность");
		Если РеквизитыНабораЗаписей.Колонки.Найти("МоментВремени") <> Неопределено Тогда
			РеквизитыНабораЗаписей.Колонки.Удалить("МоментВремени");
		КонецЕсли;
		//Если РеквизитыНабораЗаписей.Колонки.Найти("Период") <> Неопределено Тогда
		//	РеквизитыНабораЗаписей.Колонки.Удалить("Период");
		//КонецЕсли;
		Если РеквизитыНабораЗаписей.Колонки.Найти("Портфель") <> Неопределено Тогда
			РеквизитыНабораЗаписей.Колонки.Удалить("Портфель");
		КонецЕсли;

		// Создаем колонки таблицы
		Для каждого КолонкаРеквизита Из РеквизитыНабораЗаписей.Колонки Цикл
			
			ИмяКолонки = СтрокаРегистра.Имя + КолонкаРеквизита.Имя;
			ТекКолонка = Элементы.Найти(ИмяКолонки);
			Если ТекКолонка = Неопределено Тогда
				ТекКолонка = Элементы.Добавить(ИмяКолонки, Тип("ПолеФормы"), ТекТаблица);
			КонецЕсли;
			ТекКолонка.ПутьКДанным = СтрокаРегистра.Имя + "." + КолонкаРеквизита.Имя;
			ТекКолонка.Вид = ВидПоляФормы.ПолеВвода;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Элементы.ГруппаХозрасчетный.Видимость               = ПоказатьХозрасчетный;
	Элементы.ГруппаЕПС.Видимость               			= ПоказатьЕПС;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВозможностьРедактированияЗаписей()
	
	Для каждого ЭлементФормы Из Элементы.ГруппаДвиженияРегистров.ПодчиненныеЭлементы Цикл
		ЭлементФормы.ТолькоПросмотр = ИСТИНА;
	КонецЦикла;
	
КонецПроцедуры // УстановитьВозможностьРедактированияЗаписей()

&НаСервере
Процедура СоздатьРеквизитыФормы()
	
	НовыеРеквизиты        = Новый Массив;
	УдаляемыеРеквизиты    = Новый Массив;
	СуществующиеРеквизиты = ПолучитьРеквизиты();
	
	Для каждого СтрокаРегистра Из Объект.Регистры Цикл
		
		Если СтрокаРегистра.Имя = "ЕПС" Или СтрокаРегистра.Имя = "Хозрасчетный" Тогда
			Продолжить;
		КонецЕсли; 
		
		ТипРеквизита = Новый ОписаниеТипов("ДинамическийСписок");//  СтрокаРегистра.ТипРегистра + "." + СтрокаРегистра.Имя
		ПолноеИмяРегистра = СтрокаРегистра.ТипРегистра + "." + СтрокаРегистра.Имя; 
		
		ИмяРеквизита = СтрокаРегистра.Имя;
		Реквизит =  Новый РеквизитФормы(ИмяРеквизита, ТипРеквизита, , , Истина);
		НовыеРеквизиты.Добавить(Реквизит);
		
	КонецЦикла;
	
	Попытка
		ИзменитьРеквизиты(НовыеРеквизиты, УдаляемыеРеквизиты);
	Исключение
	КонецПопытки;
	
	// Установка отборов.
	Для каждого СтрокаРегистра Из Объект.Регистры Цикл
		
		ИмяРеквизита = СтрокаРегистра.Имя;
			
			Если СтрокаРегистра.Имя = "Хозрасчетный" Тогда
				
				ПараметрыТаблицы = ЭтаФорма[ИмяРеквизита].Параметры.Элементы;
				
				Параметр = ПараметрыТаблицы.Найти("Регистраторы");
				Параметр.Значение 		= СписокРегистраторов;
				Параметр.Использование 	= Истина;
								
				Параметр = ПараметрыТаблицы.Найти("Портфель");
				Параметр.Значение 		= Портфель;
				Параметр.Использование 	= Истина;
				
			ИначеЕсли СтрокаРегистра.Имя = "ЕПС" Тогда
				
				ПараметрыТаблицы = ЭтаФорма[ИмяРеквизита].Параметры.Элементы;
				
				Параметр = ПараметрыТаблицы.Найти("Регистраторы");
				Параметр.Значение 		= СписокРегистраторов;
				Параметр.Использование 	= Истина;
								
				Параметр = ПараметрыТаблицы.Найти("Портфель");
				Параметр.Значение 		= Портфель;
				Параметр.Использование 	= Истина;
				

			Иначе
				ЭтаФорма[ИмяРеквизита].ОсновнаяТаблица = СтрокаРегистра.ТипРегистра + "." + СтрокаРегистра.Имя;
				
				
				Отбор = ЭтаФорма[ИмяРеквизита].Отбор.Элементы;
				ЭлементОтбора 				= Отбор.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.ВСписке;
				ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Регистратор");
				ЭлементОтбора.ПравоеЗначение= СписокРегистраторов;
				
				
			КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПовторноеОткрытиеСервер()
	
	Возврат;
		
КонецПроцедуры	

&НаСервере
Функция ИмяРеквизитаПоляНаСервере(Поле)
	ПутьКДанным = Элементы[Поле].ПутьКДанным;
	НачальныйНомер = СтрНайти(ПутьКДанным, ".");
	ИмяРеквизит = Сред(ПутьКДанным, НачальныйНомер + 1);
	Возврат	ИмяРеквизит;			
КонецФункции

#КонецОбласти 
