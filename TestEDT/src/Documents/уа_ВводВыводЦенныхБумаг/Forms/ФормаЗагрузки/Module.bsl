// СОБЫТИЯ ФОРМЫ
#Область СОБЫТИЯ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Макет			= Документы.уа_ВводВыводЦенныхБумаг.ПолучитьМакет("МакетЗагрузки");
	ОбластьЗаголовка= Макет.ПолучитьОбласть("Заголовок");
	ЭтотОбъект.тдЗагрузка.Вывести(ОбластьЗаголовка);
КонецПроцедуры

#КонецОбласти

// КОМАНДЫ ФОРМЫ
#Область КОМАНДЫ_ФОРМЫ

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если ВладелецФормы.Объект.Активы.Количество() > 0 Тогда 		
		Оповещение = Новый ОписаниеОповещения("ВыборПользователяПоЗавершении",ЭтотОбъект); 		
		ПоказатьВопрос(Оповещение,"Перед заполнением табличная часть будет очищена. Заполнить?",
			РежимДиалогаВопрос.ДаНет); 		
	Иначе  		
		ЗагрузитьАктивы();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПользователяПоЗавершении(Результат, Параметры) Экспорт
 
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВладелецФормы.Объект.Активы.Очистить();
		ЗагрузитьАктивы();
	КонецЕсли;
 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьАктивы()
	
	Состояние("Загрузка данных",,,БиблиотекаКартинок.ДлительнаяОперация48);
	ДокСсылка = ВладелецФормы.Объект;
	Данные = ЗагрузитьДанныеИзТабличногоДокумента(НачалоДня(ДокСсылка.Дата));
	Для каждого Элемент Из Данные Цикл
		Строка = ДокСсылка.Активы.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Элемент);		
	КонецЦикла; 
	Состояние("Выполнена загрузка данных",,,БиблиотекаКартинок.ДлительнаяОперация48);
	ЭтаФорма.Закрыть();
		
КонецПроцедуры 

#КонецОбласти

// Служебные функции
#Область СлужебныеФункции

&НаСервере
Функция ПолучитьСоответствиеСтолбцовТабличногоДокумента()
	СоответствиеСтолбцов = Новый Соответствие;
	
	Макет			= Документы.уа_ВводВыводЦенныхБумаг.ПолучитьМакет("МакетЗагрузки");
	ОбластьСтруктуры= Макет.ПолучитьОбласть("СтруктураТЧ");
	КолвоСтолбцов 	= ОбластьСтруктуры.ШиринаТаблицы;

	Для НомерСтолбца = 1 По КолвоСтолбцов Цикл
		Область = ОбластьСтруктуры.Область(1, НомерСтолбца, 1, НомерСтолбца);
		СоответствиеСтолбцов.Вставить(НомерСтолбца, Область.Текст);
	КонецЦикла;
	
	Возврат СоответствиеСтолбцов;
КонецФункции


&НаСервере
Функция ЗагрузитьДанныеИзТабличногоДокумента(Дата)
	ТаблДок = ЭтотОбъект.тдЗагрузка;
	
	КолвоСтрок 		=  ТаблДок.ВысотаТаблицы;
	КолвоСтолбцов 	=  ТаблДок.ШиринаТаблицы;
	
	СтруктураСтолбцов = ПолучитьСоответствиеСтолбцовТабличногоДокумента();
	
	ТЗ = Документы.уа_ВводВыводЦенныхБумаг.ПустаяСсылка().Активы.ВыгрузитьКолонки();
	ТипИдентификатор= Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.уа_Идентификатор.Тип);
	ТЗ.Колонки.Добавить("Идентификатор", ТипИдентификатор);  
	
	СписокАктивов = Новый Соответствие;
		
	Для НомерСтроки = 2 По КолвоСтрок Цикл  
		Строка = ТЗ.Добавить();
		Для НомерСтолбца = 1 По КолвоСтолбцов Цикл
			ОбластьТД  = ТаблДок.Область(НомерСтроки, НомерСтолбца, НомерСтроки, НомерСтолбца);
			
			Попытка
				Если ТипЗнч(Строка[СтруктураСтолбцов[НомерСтолбца]]) = Тип("Дата") Тогда
					Строка[СтруктураСтолбцов[НомерСтолбца]] = СокрЛП(ОбластьТД.Текст) + " 00:00:00";
				Иначе
					Строка[СтруктураСтолбцов[НомерСтолбца]] = СокрЛП(ОбластьТД.Текст);
				КонецЕсли;	
			Исключение
				
			КонецПопытки;    			
		КонецЦикла; 
		
		Если СписокАктивов.Получить(Строка.Идентификатор) = Неопределено Тогда
			СписокАктивов.Вставить(Строка.Идентификатор);	
		КонецЕсли;     		
	КонецЦикла;
	
	уа_ОбменСRUDATA.ЗаполнитьЦенныеБумаги(СписокАктивов);
	
	Возврат ПолучитьМассивЗначений(ТЗ, Дата);
КонецФункции


&НаСервере
Функция ПолучитьМассивЗначений(ТЗ, Дата)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ДатаПартии, НомерПартии, Идентификатор, Количество, 
	|	ЦенаПриобретения, ЦенаАмортизации, ЦенаНакопленногоДисконта, ДатаОкончанияАмортизации,
	|	СуммаВал, СуммаАмортизацииВал, НКДВал, УКДВал, СуммаИндексацииНоминалаВал, СуммаПереоценкиВал, СуммаКорректировкиВал, СуммаРезерваВал,
	|	ЭСП, СуммаНУ
	|ПОМЕСТИТЬ ТЗ_Активы
	|ИЗ &ТЗ КАК Т;
	|
	|ВЫБРАТЬ 
	|	А.ДатаПартии, 
	|	А.НомерПартии, 
	|	А.Количество, 
	|	А.ЦенаПриобретения, 
	|	А.ЦенаАмортизации, 
	|	А.ЦенаНакопленногоДисконта, 
	|	А.ДатаОкончанияАмортизации,
	|	А.СуммаВал, 
	|	А.СуммаАмортизацииВал, 
	|	А.НКДВал, 
	|	А.УКДВал, 
	|	А.СуммаИндексацииНоминалаВал, 
	|	А.СуммаПереоценкиВал,
	|	А.СуммаКорректировкиВал,
	|	А.СуммаРезерваВал,
	|	А.ЭСП, 
	|	А.СуммаНУ,
	|	ФИ.Ссылка КАК ЦеннаяБумага,
	|	ФИ.ВалютаНоминала КАК Валюта,
	|	ЕСТЬNULL(КВ.Курс,1) КАК КурсДокумента,
	|	ЕСТЬNULL(КВ.Кратность,1) КАК КратностьДокумента
	|ИЗ ТЗ_Активы КАК А
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уа_СоответствияОбъектовУчета КАК СОУ ПО СОУ.Идентификатор = А.Идентификатор 
	|		И СОУ.ВидОбъектаИмпорта = ЗНАЧЕНИЕ(ПланВидовХарактеристик.уа_ВидыОбъектовИмпорта.ФинансовыеИнструменты)
	|		И СОУ.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.уа_ИсточникиДанных.RuData)
	|   ЛЕВОЕ СОЕДИНЕНИЕ Справочник.уа_ФинансовыеИнструменты ФИ ПО ФИ.Ссылка = СОУ.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата) КВ ПО КВ.Валюта = ФИ.ВалютаНоминала
	|УПОРЯДОЧИТЬ ПО ЦеннаяБумага, ДатаПартии, НомерПартии АВТОУПОРЯДОЧИВАНИЕ;";	
		
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Массив = Новый Массив;

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Массив;		
	КонецЕсли; 
	
	ВалютаРУ = Константы.ВалютаРегламентированногоУчета.Получить();    
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Структура = Новый Структура(
			"ДатаПартии, НомерПартии, Количество, ЦенаПриобретения, 
			|ЦенаАмортизации, ЦенаНакопленногоДисконта, ДатаОкончанияАмортизации, 
			|Сумма, СуммаАмортизации, НКД, УКД, СуммаИндексацииНоминала, СуммаПереоценки, СуммаКорректировки, СуммаРезерва, 
			|СуммаВал, СуммаАмортизацииВал, НКДВал, УКДВал, СуммаИндексацииНоминалаВал, СуммаПереоценкиВал, СуммаКорректировкиВал, СуммаРезерваВал, 
			|ЭСП, СуммаНУ, ЦеннаяБумага, Валюта, КурсДокумента, КратностьДокумента"
		);
		ЗаполнитьЗначенияСвойств(Структура, Выборка);	
		
		Курс		 							= Структура.КурсДокумента / Структура.КратностьДокумента;
		Структура.Сумма							= Окр(Структура.СуммаВал * Курс, 2 );
		Структура.СуммаАмортизации 				= Окр(Структура.СуммаАмортизацииВал * Курс, 2 );
		Структура.НКД 							= Окр(Структура.НКДВал * Курс, 2 );
		Структура.УКД							= Окр(Структура.УКДВал * Курс, 2 );
		Структура.СуммаИндексацииНоминала 		= Окр(Структура.СуммаИндексацииНоминалаВал * Курс, 2 );
		Структура.СуммаПереоценки 				= Окр(Структура.СуммаПереоценкиВал * Курс, 2 );
		Структура.СуммаКорректировки		 	= Окр(Структура.СуммаКорректировкиВал * Курс, 2 );
		Структура.СуммаРезерва					= Окр(Структура.СуммаРезерваВал * Курс, 2 );
		
		Массив.Добавить(Структура);
	КонецЦикла;
	
	Возврат Массив;
КонецФункции;

#КонецОбласти
