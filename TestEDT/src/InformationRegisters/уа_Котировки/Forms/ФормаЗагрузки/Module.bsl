// СОБЫТИЯ ФОРМЫ
#Область СОБЫТИЯ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Макет			= РегистрыСведений.уа_Котировки.ПолучитьМакет("МакетЗагрузки");
	ОбластьЗаголовка= Макет.ПолучитьОбласть("Заголовок");
	ЭтотОбъект.тдЗагрузка.Вывести(ОбластьЗаголовка);
КонецПроцедуры

#КонецОбласти

// КОМАНДЫ ФОРМЫ
#Область КОМАНДЫ_ФОРМЫ

&НаКлиенте
Процедура Загрузить(Команда)
	
	ЗагрузитьКотировки();				
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКотировки()
	
	Состояние("Загрузка данных",,,БиблиотекаКартинок.ДлительнаяОперация48);
	ЗагрузитьДанныеИзТабличногоДокумента();
	Состояние("Выполнена загрузка данных",,,БиблиотекаКартинок.ДлительнаяОперация48);
	ЭтаФорма.Закрыть();
		
КонецПроцедуры 

#КонецОбласти

// Служебные функции
#Область СлужебныеФункции

&НаСервере
Функция ПолучитьСоответствиеСтолбцовТабличногоДокумента()
	СоответствиеСтолбцов = Новый Соответствие;
	
	Макет			= РегистрыСведений.уа_Котировки.ПолучитьМакет("МакетЗагрузки");
	ОбластьСтруктуры= Макет.ПолучитьОбласть("СтруктураТЧ");
	КолвоСтолбцов 	= ОбластьСтруктуры.ШиринаТаблицы;

	Для НомерСтолбца = 1 По КолвоСтолбцов Цикл
		Область = ОбластьСтруктуры.Область(1, НомерСтолбца, 1, НомерСтолбца);
		СоответствиеСтолбцов.Вставить(НомерСтолбца, Область.Текст);
	КонецЦикла;
	
	Возврат СоответствиеСтолбцов;
КонецФункции


&НаСервере
Функция ЗагрузитьДанныеИзТабличногоДокумента()
	ТаблДок = ЭтотОбъект.тдЗагрузка;
	
	КолвоСтрок 		=  ТаблДок.ВысотаТаблицы;
	КолвоСтолбцов 	=  ТаблДок.ШиринаТаблицы;
	
	СтруктураСтолбцов = ПолучитьСоответствиеСтолбцовТабличногоДокумента();
	
	ТЗ = Новый ТаблицаЗначений;
	ТипЦены = Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.уа_Цена.Тип);
	ТЗ.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));  
	ТЗ.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.уа_Идентификатор.Тип)); 
	ТЗ.Колонки.Добавить("СправедливаяСтоимость", ТипЦены);  
	ТЗ.Колонки.Добавить("Купон", ТипЦены);  
	ТЗ.Колонки.Добавить("Номинал", ТипЦены);  
	 
	
	СписокАктивов = Новый Соответствие;
		
	Для НомерСтроки = 2 По КолвоСтрок Цикл  
		Строка = ТЗ.Добавить();
		Для НомерСтолбца = 1 По КолвоСтолбцов Цикл
			ОбластьТД  = ТаблДок.Область(НомерСтроки, НомерСтолбца, НомерСтроки, НомерСтолбца);
			
			Попытка
				Если ТипЗнч(Строка[СтруктураСтолбцов[НомерСтолбца]]) = Тип("Дата") Тогда
					Строка[СтруктураСтолбцов[НомерСтолбца]] = СокрЛП(ОбластьТД.Текст) + " 00:00:00";
				Иначе
					Строка[СтруктураСтолбцов[НомерСтолбца]] = СокрЛП(ОбластьТД.Текст);
				КонецЕсли;	
			Исключение
				
			КонецПопытки;    			
		КонецЦикла; 		

	КонецЦикла;
	
	ЗаполнитьКотировки(ТЗ);
КонецФункции


&НаСервере
Процедура ЗаполнитьКотировки(ТЗ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Дата, Идентификатор, СправедливаяСтоимость, Купон, Номинал
	|ПОМЕСТИТЬ ТЗ_Котировки
	|ИЗ &ТЗ КАК Т;
	|
	|ВЫБРАТЬ 
	|	К.Дата КАК Период, 
	|	ФИ.Ссылка КАК ЦеннаяБумага,  
	|	ФИ.ВалютаНоминала КАК Валюта,
	|	К.СправедливаяСтоимость, 
	|	К.Купон, 
	|	К.Номинал
	|ИЗ ТЗ_Котировки КАК К
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.уа_СоответствияОбъектовУчета КАК СОУ ПО СОУ.Идентификатор = К.Идентификатор 
	|		И СОУ.ВидОбъектаИмпорта = ЗНАЧЕНИЕ(ПланВидовХарактеристик.уа_ВидыОбъектовИмпорта.ФинансовыеИнструменты)
	|		И СОУ.ИсточникДанных = ЗНАЧЕНИЕ(Справочник.уа_ИсточникиДанных.RuData)
	|   ЛЕВОЕ СОЕДИНЕНИЕ Справочник.уа_ФинансовыеИнструменты ФИ ПО ФИ.Ссылка = СОУ.ОбъектУчета	
	|УПОРЯДОЧИТЬ ПО Дата, ЦеннаяБумага АВТОУПОРЯДОЧИВАНИЕ;";	
		
	Запрос.УстановитьПараметр("ТЗ", ТЗ);	
	
	Массив = Новый Массив;

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;		
	КонецЕсли; 
	 
	Котировка = Новый Структура("Период,ВидКотировки,Биржа,ЦеннаяБумага,Валюта,Значение");
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.СправедливаяСтоимость <> 0 Тогда
			Котировка.Период 		= Выборка.Период;
			Котировка.ВидКотировки 	= Перечисления.уа_ВидыКотировки.СправедливаяСтоимость;
			Котировка.Биржа			= Справочники.уа_Биржи.МосковскаяБиржа;
			Котировка.ЦеннаяБумага  = Выборка.ЦеннаяБумага;
			Котировка.Валюта		= Выборка.Валюта;
			Котировка.Значение		= Выборка.СправедливаяСтоимость;			
			РегистрыСведений.уа_Котировки.Обновить(Котировка);
		КонецЕсли; 
		
		Если Выборка.Купон <> 0 Тогда
			Котировка.Период 		= Выборка.Период;
			Котировка.ВидКотировки 	= Перечисления.уа_ВидыКотировки.Купон;
			Котировка.Биржа			= Справочники.уа_Биржи.МосковскаяБиржа;
			Котировка.ЦеннаяБумага  = Выборка.ЦеннаяБумага;
			Котировка.Валюта		= Выборка.Валюта;
			Котировка.Значение		= Выборка.Купон;			
			РегистрыСведений.уа_Котировки.Обновить(Котировка);
		КонецЕсли; 
		
		Если Выборка.Номинал <> 0 Тогда
			Котировка.Период 		= Выборка.Период;
			Котировка.ВидКотировки 	= Перечисления.уа_ВидыКотировки.Номинал;
			Котировка.Биржа			= Справочники.уа_Биржи.МосковскаяБиржа;
			Котировка.ЦеннаяБумага  = Выборка.ЦеннаяБумага;
			Котировка.Валюта		= Выборка.Валюта;
			Котировка.Значение		= Выборка.Номинал;			
			РегистрыСведений.уа_Котировки.Обновить(Котировка);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры;

#КонецОбласти
