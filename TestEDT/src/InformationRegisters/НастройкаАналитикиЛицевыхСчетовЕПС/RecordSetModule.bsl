#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ 

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если 	ЭтотОбъект.Отбор.Портфель.ВидСравнения <> ВидСравнения.Равно
		Или ЭтотОбъект.Отбор.Счет.ВидСравнения <> ВидСравнения.Равно Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭтотОбъект.Количество() > 0  Тогда
		Запись 			= ЭтотОбъект[0];
		
		Отказ 			= РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.ЕстьНарушенияПорядкаЗаполненияАналитики(Запись);
		ТекстСообщения 	= "Настройка аналитики должна заполняться подряд (без пропусков)!";
		
		Если Не Отказ Тогда
			Отказ 				= РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.ЕстьДублиАналитики(Запись);
			ТекстСообщения 		= "Недопустимо дублирование аналитики в настройке!";
		КонецЕсли; 
		
		Если Отказ Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
	Портфель 			= ЭтотОбъект.Отбор.Портфель.Значение;
	Счет	 			= ЭтотОбъект.Отбор.Счет.Значение;
	ЗаполненПарныйСчет	= ЭтотОбъект.ДополнительныеСвойства.Свойство("ЗаполненПарныйСчет");
	
	НаборЗаписей 		= РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Портфель.Установить(Портфель);
	НаборЗаписей.Отбор.Счет.Установить(Счет);
	НаборЗаписей.Прочитать();
	
	Если Модифицированность() Тогда 
		// модифицированность при программной записи, удалении и добавлении - истина; при интерактивной записи в первом прогоне - ложь (очистка), а во втором - истина (запись ноаого набора)
		Если НаборЗаписей.Количество() > 0  И ЭтотОбъект.Количество() = 0 Тогда     
			Если Портфель.Пустая() Тогда
				Отказ 			= Истина;
				ТекстСообщения 	= "Удаление записи по пустому портфелю недопустимо!";
			Иначе
				Если Не ЗаполненПарныйСчет Тогда
					Отказ = РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.ПроверитьСоответсвиеЛицевыхСчетовНастройкеПустогоПортфеляПриУдаленииНастройки(НаборЗаписей[0]);
					ТекстСообщения 	= "Удаление записи по набору измерений, для которого есть не помеченные на удаление л/счета, аналитика которых отличается от настройки пустого портфеля, недопустимо!";
				КонецЕсли; 
			КонецЕсли;
			Если Отказ Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецЕсли; 
			Возврат;
		КонецЕсли; 
		Если НаборЗаписей.Количество() = 0  И ЭтотОбъект.Количество() > 0            
			И ОбщегоНазначения.СтрокиИзБуфераОбмена().Источник <> "НастройкаАналитикиЛицевыхСчетовЕПС" 
			И Не ЗаполненПарныйСчет 
			Тогда                                          
			Отказ = РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.ПроверитьСоответсвиеЛицевыхСчетовНастройкеПустогоПортфеляПриДобавленииНастройки(ЭтотОбъект[0]);
			ТекстСообщения 	= "Добавление записи по набору измерений, для которого есть не помеченные на удаление л/счета с отличающейся настройкой аналитики по пустому портфелю недопустимо!";
			Если Отказ Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецЕсли; 
			Возврат;
		КонецЕсли;
	КонецЕсли; 
	
	ПоместитьВБуферСтарыеНастройки(НаборЗаписей, ЭтотОбъект);
	
	Если ЭтотОбъект.Количество() > 0  Тогда
		Запись = ЭтотОбъект[0];
		Если ОбщегоНазначения.СтрокиИзБуфераОбмена().Источник = "НастройкаАналитикиЛицевыхСчетовЕПС" Тогда
			СтруктураНастроек = Новый Структура;
			Для Каждого ЭлементСтруктуры Из ОбщегоНазначения.СтрокиИзБуфераОбмена().Данные Цикл
				СтруктураНастроек.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
			КонецЦикла;
			ОбщегоНазначения.СкопироватьВБуферОбмена(Неопределено, Неопределено);
			
			ТаблицаЛицевыхСчетов = РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.ПолучитьЛицевыеСчетаСАналитикой(СтруктураНастроек.Счет, СтруктураНастроек.Портфель);
			Если ТаблицаЛицевыхСчетов.Количество() > 0 Тогда
				Отказ 			= Запись.Портфель <> СтруктураНастроек.Портфель Или Запись.Счет <> СтруктураНастроек.Счет;
				ТекстСообщения 	= "Недопустимо изменение настройки аналитики при наличии лицевых счетов по заданному набору: счет-портфель!";
				
				Если Не (ЗаполненПарныйСчет Или Отказ) Тогда
					Отказ 			= РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.ПроверитьСоответствиеАналитикиНовойНастройке(СтруктураНастроек, Запись, ТаблицаЛицевыхСчетов);
					ТекстСообщения 	= "Недопустимо менять настройку аналитики при наличии лицевых счетов, в которых изменяемая аналитика заполнена!";
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПоместитьВБуферСтарыеНастройки(НаборЗаписей, ЭтотОбъект)
	
	Если ОбщегоНазначения.СтрокиИзБуфераОбмена().Источник <> "НастройкаАналитикиЛицевыхСчетовЕПС" Тогда
		Если НаборЗаписей.Количество() > 0 Тогда
			СтруктураЗаписи = Новый Структура;
			Для каждого Измерение Из Метаданные.РегистрыСведений["НастройкаАналитикиЛицевыхСчетовЕПС"].Измерения Цикл
				Имя = Измерение.Имя;
				СтруктураЗаписи.Вставить(Имя, НаборЗаписей[0][Имя])
			КонецЦикла; 
			Для каждого Ресурс Из Метаданные.РегистрыСведений["НастройкаАналитикиЛицевыхСчетовЕПС"].Ресурсы Цикл
				Имя = Ресурс.Имя;
				СтруктураЗаписи.Вставить(Имя, НаборЗаписей[0][Имя])
			КонецЦикла; 
			ОбщегоНазначения.СкопироватьВБуферОбмена(СтруктураЗаписи, "НастройкаАналитикиЛицевыхСчетовЕПС");
		ИначеЕсли ЭтотОбъект.Количество() > 0 Тогда
			СтруктураЗаписи = Новый Структура;
			Для каждого Измерение Из Метаданные.РегистрыСведений["НастройкаАналитикиЛицевыхСчетовЕПС"].Измерения Цикл
				Имя = Измерение.Имя;
				СтруктураЗаписи.Вставить(Имя, ЭтотОбъект[0][Имя])
			КонецЦикла; 
			Для каждого Ресурс Из Метаданные.РегистрыСведений["НастройкаАналитикиЛицевыхСчетовЕПС"].Ресурсы Цикл
				Имя = Ресурс.Имя;
				СтруктураЗаписи.Вставить(Имя, ЭтотОбъект[0][Имя])
			КонецЦикла; 
			ОбщегоНазначения.СкопироватьВБуферОбмена(СтруктураЗаписи, "НастройкаАналитикиЛицевыхСчетовЕПС");
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВозможностьИспользованияМаски(Отказ);
	
	Если Отказ Или ЭтотОбъект.ДополнительныеСвойства.Свойство("ЗаполненПарныйСчет") Тогда
		Возврат;
	КонецЕсли; 
	
	СинхронизацияНастроекПарногоСчета(ЭтотОбъект);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

Процедура ПроверитьВозможностьИспользованияМаски(Отказ)
	
	Счет = ЭтотОбъект.Отбор.Счет.Значение;
	Для Каждого Запись из ЭтотОбъект Цикл
		МаскаЛицевогоСчета = Запись.МаскаЛицевогоСчета;
		Если ЗначениеЗаполнено(МаскаЛицевогоСчета) Тогда 
			Для Каждого СтрокаВидаАналитикиМаски Из МаскаЛицевогоСчета.ВидыАналитик Цикл
				ВидАналитикиМаски = СтрокаВидаАналитикиМаски.ВидАналитики;
				Если  Запись.Аналитика1 <> ВидАналитикиМаски 
					И Запись.Аналитика2 <> ВидАналитикиМаски 
					И Запись.Аналитика3 <> ВидАналитикиМаски 
					И Запись.Аналитика4 <> ВидАналитикиМаски 
					И Запись.Аналитика5 <> ВидАналитикиМаски Тогда 
					
					ТекстСообщения = НСтр("ru = 'Невозможно использовать данную маску, т.к. в ней используется вид аналитики <"+ВидАналитикиМаски+">, которого нет в записи'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СинхронизацияНастроекПарногоСчета(ЭтотНабор)
	
	Для каждого Запись Из ЭтотНабор Цикл
		Если Запись.Счет.Парный Тогда                  
			ПарныйСчет 		= РегистрыСведений.ПарныеСчетаЕПС.ПарныйСчет(Запись.Счет);
			НаборЗаписей 	= РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Счет.Установить(ПарныйСчет);
			НаборЗаписей.Отбор.Портфель.Установить(Запись.Портфель);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() = 0 Тогда
				ЗаписьНабора = НаборЗаписей.Добавить();
			Иначе
				ЗаписьНабора = НаборЗаписей[0];
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, Запись);
			ЗаписьНабора.Счет = ПарныйСчет;
			
			НаборЗаписей.ДополнительныеСвойства.Вставить("ЗаполненПарныйСчет", Истина);
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Счет 		= ЭтотНабор.Отбор.Счет.Значение;
	Портфель 	= ЭтотНабор.Отбор.Портфель.Значение;
	Если ЭтотНабор.Количество() = 0 И ЗначениеЗаполнено(Счет) И ЗначениеЗаполнено(Портфель) Тогда
		Если Счет.Парный Тогда
			ПарныйСчет 		= РегистрыСведений.ПарныеСчетаЕПС.ПарныйСчет(Счет);
			НаборЗаписей 	= РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Счет.Установить(ПарныйСчет);
			НаборЗаписей.Отбор.Портфель.Установить(Портфель);
			Если НаборЗаписей.Количество() <> 0 Тогда
				НаборЗаписей.Очистить();
			КонецЕсли; 
			
			НаборЗаписей.ДополнительныеСвойства.Вставить("ЗаполненПарныйСчет", Истина);
			НаборЗаписей.Записать();
		КонецЕсли; 
	КонецЕсли; 
		
КонецПроцедуры
 
#КонецОбласти

#КонецЕсли	
