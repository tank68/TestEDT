///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
&НаКлиенте
Перем ОтключитьАвтоЗаполнениеРеквизитов;

&НаКлиенте
Перем ФормаДлительнойОперации Экспорт;
// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Не ЗначениеЗаполнено(Объект.ВидКонтрагента) Тогда
			Объект.ВидКонтрагента = Перечисления.ВидКонтрагента.ЮридическоеЛицо;
		КонецЕсли;
		ЗаполнитьЗаголовокРуководитель(ЭтотОбъект, Объект);
		НастроитьЗаголовокКонтактныеЛица(ЭтотОбъект, Объект);
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ИсключаемыеВиды = Новый Массив;
	ИсключаемыеВиды.Добавить(Справочники.ВидыКонтактнойИнформации.АдресКонтрагента);
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(
		ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация",, ИсключаемыеВиды);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
					
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьЗаголовокРуководитель(ЭтотОбъект, ТекущийОбъект);
	
	НастроитьЗаголовокКонтактныеЛица(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	//Элементы.ГруппаДополнительныеДанные1.Видимость = ЗначениеЗаполнено(ТекущийОбъект.Ссылка);
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
			
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
			
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КПППриИзменении(Элемент)
	
	Объект.КПП = СокрЛП(Объект.КПП);
			
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	Объект.ИНН = СокрЛП(Объект.ИНН);
	ПриИзмененииИНН(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКонтрагентаПриИзменении(Элемент)
	
	Если Объект.ВидКонтрагента <> ПредопределенноеЗначение("Перечисление.ВидКонтрагента.ЮридическоеЛицо") Тогда
		Объект.КПП = "";
	КонецЕсли;
					
КонецПроцедуры

&НаКлиенте
Процедура ФамилияРуководителяПриИзменении(Элемент)
	
	ЗаполнитьЗаголовокРуководитель(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяРуководителяПриИзменении(Элемент)
	
	ЗаполнитьЗаголовокРуководитель(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоРуководителяПриИзменении(Элемент)
	
	ЗаполнитьЗаголовокРуководитель(ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтактныеЛица

&НаКлиенте
Процедура КонтактныеЛицаПриИзменении(Элемент)
	
	НастроитьЗаголовокКонтактныеЛица(ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет действия при изменении ИНН.
&НаКлиенте
Процедура ПриИзмененииИНН(ЗаполнитьРеквизиты = Ложь)
					
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗаголовокКонтактныеЛица(Форма, ТекущийОбъект)
	
	Форма.Элементы.ГруппаКонтактныеЛица.ЗаголовокСвернутогоОтображения =
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Контактные лица (%1)'"),
			ТекущийОбъект.КонтактныеЛица.Количество());
	
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

//@skip-warning
&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьЗаголовокРуководитель(Форма, Объект)
	
	Если ЗначениеЗаполнено(Объект.ФамилияРуководителя) Тогда
		Форма.Элементы.ГруппаРуководитель.ЗаголовокСвернутогоОтображения =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Руководитель: %1%2%3'"),
				Объект.ФамилияРуководителя,
				?(ЗначениеЗаполнено(Объект.ИмяРуководителя), " " + ВРег(Лев(Объект.ИмяРуководителя, 1)) + ".", ""),
				?(ЗначениеЗаполнено(Объект.ОтчествоРуководителя), " " + ВРег(Лев(Объект.ОтчествоРуководителя, 1)) + ".", ""));
	Иначе
		Форма.Элементы.ГруппаРуководитель.ЗаголовокСвернутогоОтображения =
			НСтр("ru = 'Руководитель: <не заполнено>'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
