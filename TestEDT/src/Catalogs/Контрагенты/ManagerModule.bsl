#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ТекстЗапросаПроверкиДублейКонтрагентов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.ЭтоГруппа
	|	И НЕ Контрагенты.Ссылка = &Ссылка
	|	И Контрагенты.КПП = &КПП
	|	И Контрагенты.ИНН = &ИНН";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Функция определяет наличие дублей у контрагента.
// ИНН - ИНН проверяемого контрагента, Тип - Строка(12)
// КПП - КПП проверяемого контрагента, Тип - Строка(9)
// Ссылка - Сам проверяемый контрагент, Тип - СправочникСсылка.Контрагенты
Функция ПроверитьДублиСправочникаКонтрагентыПоИННКПП(Знач ИНН, Знач КПП, Знач Ссылка, ПроверкаПриЗаписи = Ложь) Экспорт
	
	Дубли = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПроверкиДублейКонтрагентов();
	
	Запрос.УстановитьПараметр("ИНН", СокрЛП(ИНН));
	Запрос.УстановитьПараметр("КПП", СокрЛП(КПП));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДублей = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДублей.Следующий() Цикл
		Дубли.Добавить(ВыборкаДублей.Ссылка);
	КонецЦикла;
			
	Возврат Дубли;
	
КонецФункции	

//Функция выполняет поиск контрагента по ИНН и КПП.
// ИНН - Тип - Строка(12)
// КПП - Тип - Строка(9)
// Ссылка - Тип - СправочникСсылка.Контрагенты 
Функция НайтиКонтрагентаПоИННКПП(Знач ИНН, Знач КПП) Экспорт
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка КАК Контрагент
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|	И Контрагенты.КПП = &КПП";
	
	Запрос.УстановитьПараметр("ИНН", СокрЛП(ИНН));
	Запрос.УстановитьПараметр("КПП", СокрЛП(КПП));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		НайдКонтрагент = ВыборкаДетальныеЗаписи.Контрагент;
		
	Иначе
		
		НайдКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
		
	КонецЕсли;
	
	Возврат НайдКонтрагент;	
		
КонецФункции

#КонецОбласти

#КонецЕсли