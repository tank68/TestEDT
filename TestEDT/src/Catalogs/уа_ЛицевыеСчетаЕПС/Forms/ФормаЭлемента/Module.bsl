
#Область СОБЫТИЯ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьАналитику();
	УстановитьМаскуЛицевогоСчета();
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ТипЗнч(Объект.Владелец) <> Тип("ПланСчетовСсылка.ЕПС") Тогда
		ТекстСообщения = НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ru = 'Выбран не верный элемент плана счетов: %1'", ТипЗнч(Объект.Владелец)));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		Возврат;
	КонецЕсли;
	
	
	Если Не ЗначениеЗаполнено(Объект.Код) Тогда 
		
		СтруктураАналитики = Новый Структура;
		СтруктураАналитики.Вставить("Аналитика1", Объект.ЗначениеАналитики1);
		СтруктураАналитики.Вставить("Аналитика2", Объект.ЗначениеАналитики2);
		СтруктураАналитики.Вставить("Аналитика3", Объект.ЗначениеАналитики3);
		СтруктураАналитики.Вставить("Аналитика4", Объект.ЗначениеАналитики4);
		СтруктураАналитики.Вставить("Аналитика5", Объект.ЗначениеАналитики5);
		
		ДанныеНомера =  ДанныеНомера(СтруктураАналитики);
		Объект.Код = ДанныеНомера.НомерЛицевогоСчета;
		Объект.ПорядковыйНомер = ДанныеНомера.ПорядковыйНомер;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	СтруктураДляЗаписиАналитики = Новый Структура;
	СтруктураДляЗаписиАналитики.Вставить("СчетЕПС", ТекущийОбъект.Владелец);
	СтруктураДляЗаписиАналитики.Вставить("Портфель", ТекущийОбъект.Портфель);
	СтруктураДляЗаписиАналитики.Вставить("Валюта", ТекущийОбъект.Валюта);
	СтруктураДляЗаписиАналитики.Вставить("ЗначениеАналитики1", ТекущийОбъект.ЗначениеАналитики1);
	СтруктураДляЗаписиАналитики.Вставить("ЗначениеАналитики2", ТекущийОбъект.ЗначениеАналитики2);
	СтруктураДляЗаписиАналитики.Вставить("ЗначениеАналитики3", ТекущийОбъект.ЗначениеАналитики3);
	СтруктураДляЗаписиАналитики.Вставить("ЗначениеАналитики4", ТекущийОбъект.ЗначениеАналитики4);
	СтруктураДляЗаписиАналитики.Вставить("ЗначениеАналитики5", ТекущийОбъект.ЗначениеАналитики5);
	СтруктураДляЗаписиАналитики.Вставить("ЛицевойСчетЕПС", ТекущийОбъект.Ссылка);
	
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		Справочники.уа_ЛицевыеСчетаЕПС.ОбновитьПарныйЛицевойСчет(СтруктураДляЗаписиАналитики);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьМаскуЛицевогоСчета();
	УправлениеВидимостью();
КонецПроцедуры

#КонецОбласти

#Область КОМАНТДЫ_ФОРМЫ

&НаКлиенте
Процедура ОшибкаКодирования(Команда)
	ОткрытьФормуОшибки();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОшибки()

	Если НЕ ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
		
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ОписаниеОшибки", Объект.ОписаниеОшибкиКодирования);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	
	ОткрытьФорму("Справочник.уа_ЛицевыеСчетаЕПС.Форма.ФормаОшибки", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры // ОткрытьФормуОшибки()

&НаКлиенте
Процедура СгенерироватьНаименование(Команда)	
	
	СгенерироватьНаименование_Сервер();
	
КонецПроцедуры

&НаСервере
Процедура СгенерироватьНаименование_Сервер()
	
	ЛицевойСчетОбъект = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.уа_ЛицевыеСчетаЕПС"));
	
	Символ = Справочники.уа_ЛицевыеСчетаЕПС.СимволИзАналитикиЛицевогоСчета(ЛицевойСчетОбъект);
	
	ДанныеНомера = Справочники.уа_ЛицевыеСчетаЕПС.НомерЛицевогоСчетаПоПараметрам(Объект.Владелец, Объект.Портфель, Объект.Валюта, Символ, Объект.ПорядковыйНомер);
	Объект.Код = ДанныеНомера.НомерЛицевогоСчета;
	Объект.Наименование = ДанныеНомера.НомерЛицевогоСчета;
	
	Если ЗначениеЗаполнено(МаскаЛицевогоСчета) Тогда 
		КонтекстДляФормированияНомераПоМаске = Справочники.уа_ЛицевыеСчетаЕПС.КонтекстДляФормированияНомераПоМаске(ЛицевойСчетОбъект, МаскаЛицевогоСчета);
		СтруктураНомера = Справочники.МаскаЛицевогоСчета.НомерЛицевогоСчета(КонтекстДляФормированияНомераПоМаске);
		
		Объект.Наименование = СтруктураНомера.Номер;
		Объект.ОшибкаКодирования = СтруктураНомера.ОшибкаКодирования;
		Объект.ОписаниеОшибкиКодирования = СтруктураНомера.ОписаниеОшибкиКодирования;		
	КонецЕсли;
	
	УправлениеВидимостью();
	
КонецПроцедуры

#КонецОбласти

#Область СОБЫТИЯ_ЭЛЕМЕНТОВ_ФОРМЫ

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ОбновитьАналитику();

КонецПроцедуры

&НаКлиенте
Процедура ПортфельПриИзменении(Элемент)
	
	ОбновитьАналитику();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	ОбновитьЗначенияАналитики();	

КонецПроцедуры

&НаКлиенте
Процедура АналитикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокПараметров = Новый Структура;
	Для Ном = 1 По 5 Цикл		
		Если ТипЗнч(ЭтотОбъект["Аналитика" + Ном]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ЭтотОбъект["Аналитика" + Ном]);
		ИначеЕсли ТипЗнч(ЭтотОбъект["Аналитика" + Ном]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда	
			СписокПараметров.Вставить("ДоговорКонтрагента", ЭтотОбъект["Аналитика" + Ном]);
		КонецЕсли;
	КонецЦикла;	
	СписокПараметров.Вставить("ЗначениеАналитики", ЭтотОбъект[Элемент.Имя]);
	
	ОбработатьВыборАналитики(Элемент, СтандартнаяОбработка, Объект.Портфель, СписокПараметров, Элемент.ОграничениеТипа);	
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Контрагенты") Тогда

		Договор       = Неопределено;
		
		Для Ном = 1 По 5 Цикл		
			Если ТипЗнч(ЭтотОбъект["Аналитика" + Ном]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда	
				Договор = ЭтотОбъект["Аналитика" + Ном];
				Прервать;
			КонецЕсли;
		КонецЦикла;		

		Если ЗначениеЗаполнено(Договор) Тогда
			Владелец = ОбщегоНазначенияДУВызовСервера.ЗначениеРеквизитаОбъекта(Договор, "Владелец");
			Если НЕ (Владелец = ВыбранноеЗначение) Тогда
				ЭтотОбъект["Аналитика" + Ном] = ПолучитьПустойДоговор();
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ВСПОМОГАТЕЛЬНЫЕ_ПРОЦЕДУРЫ_ФУНКЦИИ

&НаСервере
Процедура ОбновитьАналитику()
	
	ОбновитьНастройкиАналитики();
	ОбновитьЗначенияАналитики();

КонецПроцедуры

&НаСервере
Функция ОбновитьНастройкиАналитики()
	
	НастройкиАналитики = РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.АналитикаСчета(Объект.Владелец, Объект.Портфель);
		
	НомерАналитики = 0;
	Для Каждого ТекущаяАналитика Из НастройкиАналитики Цикл
		НомерАналитики = НомерАналитики + 1;
		Элемент = Элементы["Аналитика"+НомерАналитики];
		Элемент.ОграничениеТипа = ТекущаяАналитика.ТипЗначения;
		Элемент.Заголовок = ТекущаяАналитика.Наименование;
		Элемент.Видимость = Истина;
	КонецЦикла;         
	
	Для СчУбратьВидимость = НомерАналитики + 1 по 5 Цикл
		Элемент = Элементы["Аналитика"+СчУбратьВидимость];
		Элемент.Видимость = Ложь;
	КонецЦикла;

КонецФункции

&НаСервере
Функция ОбновитьЗначенияАналитики()
		
	Для НомерАналитики = 1 по 5  Цикл
		Элемент = Элементы["Аналитика" + НомерАналитики];
		Если Элемент.Видимость И Элемент.ОграничениеТипа.СодержитТип(ТипЗНЧ(Объект["ЗначениеАналитики" + НомерАналитики]))Тогда
			Объект["ЗначениеАналитики" + НомерАналитики] = Объект["ЗначениеАналитики" + НомерАналитики];
		Иначе
			Объект["ЗначениеАналитики" + НомерАналитики] = Неопределено;
		КонецЕсли;
	КонецЦикла;         

КонецФункции

&НаСервере
Функция ДанныеНомера(Знач СтруктураАналитики)
	
	СимволОФР = УчетЕПС.ЗначениеОпределенногоТипаИзСтруктуры(СтруктураАналитики, Тип("СправочникСсылка.уа_СимволыОФР"));
	
	ДанныеНомера = Справочники.уа_ЛицевыеСчетаЕПС.НомерЛицевогоСчетаПоПараметрам(
		Объект.Владелец, Объект.Портфель, Объект.Валюта, СимволОФР);
	
	Возврат ДанныеНомера;
	
КонецФункции

&НаКлиенте
// Процедура устанавливает отборы в формах выбора субконто, такие как
// Портфель, Контрагент и др.
//
// Параметры:
//  Элемент      - элемент управления, для которого устанавливается отбор
//  СтандартнаяОбработка - Булево, признак стандартной обработки выбора
//                 в элементе формы
//  СписокПараметров -СписокЗначений, в котором передаются параметры
//                 отбора для форм выбора партий, документов расчетов
//                 с контрагентами
//  ОграничениеТипаЭлемента - ОписаниеТипов, содержащее список допустимых
//                 типов элемента управления
//
Процедура ОбработатьВыборАналитики(Элемент, СтандартнаяОбработка, Портфель, СписокПараметров, ОграничениеТипаЭлемента = Неопределено)
	
	Если НЕ ТипЗнч(ОграничениеТипаЭлемента) = Тип("ОписаниеТипов") Тогда
		
		ТипЭлемента = ТипЗнч(СписокПараметров.ЗначениеАналитики);
		Если ТипЭлемента = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		ОграничениеТипаЭлемента = Элемент.ОграничениеТипа;
		
	ИначеЕсли ОграничениеТипаЭлемента.Типы().Количество() > 0 Тогда
		
		ТипЭлемента = ТипЗнч(СписокПараметров.ЗначениеАналитики);
		Если ?(ТипЭлемента = Неопределено, Истина, не ОграничениеТипаЭлемента.СодержитТип(ТипЭлемента)) Тогда
			ТипЭлемента = ОграничениеТипаЭлемента.Типы()[0];
		КонецЕсли; 
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ТипЭлемента = Тип("СправочникСсылка.БанковскиеСчета") Тогда


	ИначеЕсли ТипЭлемента = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда

		СтандартнаяОбработка = Ложь;
		ФормаВыбора          = ПолучитьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора", , Элемент);
		
		Если ТипЗнч(СписокПараметров) = Тип("Структура") Тогда
			
			Если СписокПараметров.Свойство("Контрагент") Тогда
				
				Если ТипЗнч(СписокПараметров.Контрагент) =  Тип("СправочникСсылка.Контрагенты") Тогда
					
					СписокОтбор = ФормаВыбора.Список.КомпоновщикНастроек.Настройки.Отбор;
					ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокОтбор, "Владелец",
						СписокПараметров.Контрагент, ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли; 

	КонецЕсли;

	Если НЕ СтандартнаяОбработка Тогда 
		ФормаВыбора.Открыть();
	КонецЕсли;

КонецПроцедуры // ОбработатьВыборСубконто()

&НаСервереБезКонтекста
Функция ПолучитьПустойДоговор() 

	Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

КонецФункции // ПолучитьПустойДоговор()

&НаСервере
Процедура УправлениеВидимостью()
	
	ЭтоНовый = Не ЗначениеЗаполнено(Объект.Ссылка);
	
	Элементы.ОшибкаКодирования.Видимость = Объект.ОшибкаКодирования;
	
	Элементы.СгенерироватьНаименование.Видимость = Не ЭтоНовый;

	Элементы.Портфель.ТолькоПросмотр = Не ЭтоНовый;
	Элементы.Владелец.ТолькоПросмотр = Не ЭтоНовый;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМаскуЛицевогоСчета()
	МаскаЛицевогоСчета = РегистрыСведений.НастройкаАналитикиЛицевыхСчетовЕПС.МаскаЛицевогоСчетаЕПС(Объект.Владелец, Объект.Портфель);
КонецПроцедуры

&НаКлиенте
Процедура Аналитика1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьНачалоВыбораСубконто(СтандартнаяОбработка, Элемент);
	
КонецПроцедуры

&НаКлиенте 
Процедура Аналитика2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьНачалоВыбораСубконто(СтандартнаяОбработка, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьНачалоВыбораСубконто(СтандартнаяОбработка, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьНачалоВыбораСубконто(СтандартнаяОбработка, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика5НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьНачалоВыбораСубконто(СтандартнаяОбработка, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНачалоВыбораСубконто(СтандартнаяОбработка, Элемент)
	
	Если Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда		
		Для НомерАналитики = 1 По 5 Цикл
			Аналитика = Элементы["Аналитика" + НомерАналитики];
			Если Аналитика.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
				Если ЗначениеЗаполнено(Объект["ЗначениеАналитики" + НомерАналитики]) Тогда
					УстановитьОтборыСубконто(СтандартнаяОбработка,Элемент,Объект["ЗначениеАналитики" + НомерАналитики]);
				КонецЕсли; 				
			КонецЕсли;			
		КонецЦикла;		
	КонецЕсли; 
			
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборыСубконто(СтандартнаяОбработка,Элемент,Контрагент)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора          = ПолучитьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора", , Элемент);
	СписокОтбор = ФормаВыбора.Список.КомпоновщикНастроек.Настройки.Отбор;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокОтбор, "Владелец",
			Контрагент, ВидСравненияКомпоновкиДанных.Равно, "Владелец", 
			Истина,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
	ФормаВыбора.Открыть();
			
КонецПроцедуры
 

#КонецОбласти
