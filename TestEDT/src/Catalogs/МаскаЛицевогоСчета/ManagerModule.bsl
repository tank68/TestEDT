#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда  

#Область ПРОГРАМНЫЙ_ИНТЕРФЕЙС 

//Функция возвращает структуру с номером и данными по ошибкам при формировании номера
//Параметры:
//	<Контекст> - структура содержащая данные для формирования номера
// Возвращаемое значение:
//	<Структура> - Возвращается структура с ключами "Номер", "ОшибкаКодирования" и "ОписаниеОшибкиКодирования".
//
Функция НомерЛицевогоСчета(Контекст) Экспорт 
	
	СтруктураНомера = Новый Структура;
	Результат = "";
	Попытка
		Выполнить(Контекст.Шаблон);
		СтруктураНомера.Вставить("Номер", Результат);
		СтруктураНомера.Вставить("ОшибкаКодирования", Ложь);
		СтруктураНомера.Вставить("ОписаниеОшибкиКодирования", "");
		ПроверитьРезультаНаСоответствиеПравиламНомера(Контекст, СтруктураНомера);	
	Исключение
		СтруктураНомера.Вставить("Номер", "");
		СтруктураНомера.Вставить("ОшибкаКодирования", Истина);
		СтруктураНомера.Вставить("ОписаниеОшибкиКодирования", "Возникла непредвиденная ошибка:" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
	Возврат СтруктураНомера;
	
КонецФункции

//Функция проводит синтаксический контроль шаблона
//
Функция СинтаксическийКонтрольШаблонаПройден(Шаблон) Экспорт
	
	Перем Контекст;
	
	Код = 
		"Если Ложь Тогда
		|" + Шаблон + "
		|КонецЕсли";
	Попытка
		Выполнить(Код);
		Возврат Истина;
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#Область ВСПОМОГАТЕЛЬНЫЕ_ПРОЦЕДУРЫ_ФУНКЦИИ 

Функция ДополнитьЛидирующимиНулями(Значение, Длина) 
	
	Если СтрДлина(Формат(Значение, "ЧН=0; ЧГ=0")) < Длина Тогда 
		ЗначениеНужнойДлины = ОбщегоНазначенияДУКлиентСервер.ДобавитьЛидирующиеНули(Значение, Длина);
	Иначе 
		ЗначениеНужнойДлины = Прав(Формат(Значение, "ЧН=0; ЧГ=0"), Длина);		
	КонецЕсли;
	
	Возврат ЗначениеНужнойДлины;
	
КонецФункции

Функция ЗначениеРеквизитаАналитики(Контекст, ИмяАналитики, Реквизит) 
	
	Результат = "";
	
	Если Контекст.Аналитика.Свойство(ИмяАналитики) <> Неопределено Тогда 
		ЗначениеАналитики = Контекст.Аналитика[ИмяАналитики];
		Если ЗначениеЗаполнено(ЗначениеАналитики) Тогда 
			Если ИмяАналитики = "ФинансовыеИнструменты" Тогда 
				ЗначениеАналитики = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеАналитики, "Объект");	
			КонецЕсли;
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Реквизит, ЗначениеАналитики.Метаданные()) Или ОбщегоНазначения.ЭтоСтандартныйРеквизит(ЗначениеАналитики.Метаданные().СтандартныеРеквизиты, Реквизит) Тогда 
				Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеАналитики, Реквизит);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Число") Тогда 
		Результат = Формат(Результат, "ЧГ=0");	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ПроверитьРезультаНаСоответствиеПравиламНомера(Контекст, СтруктураНомера)
	
	Если Контекст.ВидЛицевогоСчета = Перечисления.ВидЛицевогоСчета.ВУ Тогда
		Возврат;	
	КонецЕсли;
	
	ПроверяемыйРезультат = СтруктураНомера.Номер;
	ЕстьНесоответствие = Ложь;
	ОписаниеОшибкиКодирования = "";
	
	Если Не (СтрДлина(ПроверяемыйРезультат) = 20 Или СтрДлина(ПроверяемыйРезультат) = 25) Тогда 
		ЕстьНесоответствие = Истина;
		ОписаниеОшибкиКодирования = ОписаниеОшибкиКодирования + " Длина номера <" + ПроверяемыйРезультат + "> не равна 20(25) символам;";
	КонецЕсли;
	
	Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ПроверяемыйРезультат) Тогда 
		ЕстьНесоответствие = Истина;
		ОписаниеОшибкиКодирования = ОписаниеОшибкиКодирования + " Номер <" + ПроверяемыйРезультат + "> содержит не числовые символы;";
	КонецЕсли;
	
	Если СуществуетЛицевойСчетСДаннымНаименованиемДляЭтогоПортфеля(Контекст, ПроверяемыйРезультат) Тогда 
		ЕстьНесоответствие = Истина;
		ОписаниеОшибкиКодирования = ОписаниеОшибкиКодирования + " Есть другой лицевой с таким номером <" + ПроверяемыйРезультат + ">;";
	КонецЕсли;
	
	Если ЕстьНесоответствие Тогда 
		СтруктураНомера.Вставить("Номер", "");
		СтруктураНомера.Вставить("ОшибкаКодирования", Истина);
		СтруктураНомера.Вставить("ОписаниеОшибкиКодирования", ОписаниеОшибкиКодирования);
	КонецЕсли;
	
КонецПроцедуры

Функция СуществуетЛицевойСчетСДаннымНаименованиемДляЭтогоПортфеля(Контекст, ПроверяемыйРезультат)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛицевыеСчетаЕПС.Ссылка
		|ИЗ
		|	Справочник.уа_ЛицевыеСчетаЕПС КАК ЛицевыеСчетаЕПС
		|ГДЕ
		|	ЛицевыеСчетаЕПС.Портфель = &Портфель
		|	И ЛицевыеСчетаЕПС.Наименование = &Наименование
		|	И 1 = 1";
		
	Если ЗначениеЗаполнено(Контекст.Ссылка) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "	ЛицевыеСчетаЕПС.Ссылка <> &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", Контекст.Ссылка);
	КонецЕсли;
	Запрос.УстановитьПараметр("Портфель", Контекст.Портфель);
	Запрос.УстановитьПараметр("Наименование", ПроверяемыйРезультат);
	
	Возврат Запрос.Выполнить().Выбрать().Количество() <> 0;

КонецФункции

#КонецОбласти

#КонецЕсли