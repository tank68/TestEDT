#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОБРАБОТЧИКИ_ОБНОВЛЕНИЯ

// Процедура отключает итоги по регистру, перезаписывает набор записей по счетам,
// включает режим итогов.
//
// Параметры:
//  Счета - массив счетов, по которым необходимо перезаписать движения
//
Процедура ПерезаписатьДвиженияПоРегистратору(Счета) Экспорт
	
	ПараметрыСеанса.ПропуститьПроверкуЗапретаИзменения = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕПСОбороты.Регистратор
		|ИЗ
		|	РегистрБухгалтерии.ЕПС.Обороты(, , Регистратор, Счет В (&Счета), , , , ) КАК ЕПСОбороты";
	
	Запрос.УстановитьПараметр("Счета", Счета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	КэшПоискаЛицевыхСчетов = Новый Соответствие;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаборЗаписей = РегистрыБухгалтерии.ЕПС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
		НаборЗаписей.Прочитать();
				
		ЧастиПроводки = Новый Массив;
		ЧастиПроводки.Добавить("Дт");
		ЧастиПроводки.Добавить("Кт");
		
		Для Каждого СтрокаНабора Из НаборЗаписей Цикл
			Для Каждого ЧастьПроводки Из ЧастиПроводки Цикл
				Если Счета.Найти(СтрокаНабора["Счет" + ЧастьПроводки]) <> Неопределено Тогда
					СтруктураЗначенийСубконто = РегистрыБухгалтерии.ЕПС.СтруктураЗначенийСубконто(СтрокаНабора, ЧастьПроводки);
					РегистрыБухгалтерии.ЕПС.ЗаполнитьСубконтоПоСтруктуре(СтрокаНабора, СтруктураЗначенийСубконто, ЧастьПроводки);
				КонецЕсли;
			КонецЦикла;		
		КонецЦикла;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("Ошибка при записи проводок ЕПС документа " + ВыборкаДетальныеЗаписи.Регистратор + " во время обновления", УровеньЖурналаРегистрации.Ошибка, , ВыборкаДетальныеЗаписи.Регистратор, ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
	ПараметрыСеанса.ПропуститьПроверкуЗапретаИзменения = Ложь;
	
КонецПроцедуры

Функция СтруктураЗначенийСубконто(СтрокаНабора, ЧастьПроводки) Экспорт
	
	СтруктураЗначений = Новый Структура;
	
	Для Каждого КоллекцияСубконто Из СтрокаНабора["Субконто" + ЧастьПроводки] Цикл
		СтруктураЗначений.Вставить(КоллекцияСубконто.Ключ.ИмяПредопределенныхДанных, КоллекцияСубконто.Значение);		
	КонецЦикла;	
	
	Возврат СтруктураЗначений;
	
КонецФункции

Процедура ЗаполнитьСубконтоПоСтруктуре(СтрокаНабора, СтруктураЗначенийСубконто, ЧастьПроводки) Экспорт 
	
	СтрокаНабора["Субконто" + ЧастьПроводки].Очистить();	
	
	Для Каждого ЭлементСубконто Из СтруктураЗначенийСубконто Цикл		
		УчетЕПС.УстановитьСубконто(СтрокаНабора, ЧастьПроводки, ЭлементСубконто.Ключ, ЭлементСубконто.Значение);		
	КонецЦикла;	

КонецПроцедуры	
	
#КонецОбласти

#КонецЕсли