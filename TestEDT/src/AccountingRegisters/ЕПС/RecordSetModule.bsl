#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОБРАБОТЧИКИ_СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	Регистратор = ЭтотОбъект.Отбор.Регистратор.Значение;
	Ошибки = Новый Массив;

	КэшПоискаЛицевыхСчетов = Новый Соответствие;
	Для Каждого Проводка Из ЭтотОбъект Цикл
		
		ПроверитьЗаполнениеРеквизитов(Проводка, Ошибки, Отказ);	
		УчетЕПС.ЗаполнитьВалютыВПроводке(Проводка);
		
		УстановитьЛицевойСчет(Проводка, Регистратор, КэшПоискаЛицевыхСчетов, Отказ);
		
	КонецЦикла; 

	ПривестиПустыеЗначенияСубконтоСоставногоТипа(ЭтотОбъект);
	ПроверитьКорректностьЛицевыхСчетов(Ошибки, Отказ);
	
	Если Отказ Тогда
		
		ВывестиОшибкиПользователю(Ошибки, Регистратор);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СЛУЖЕБНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ

Процедура ПривестиПустыеЗначенияСубконтоСоставногоТипа(Проводки)
	
	КэшВидыСоставныхСубконто = Новый Соответствие;
	
	Для Каждого Проводка Из Проводки Цикл
		
		Для Каждого Субконто Из Проводка.СубконтоДт Цикл
			
			Если НЕ ЗначениеЗаполнено(Субконто.Значение) 
				И Субконто.Значение <> Неопределено 
				И СоставнойТипСубконто(Субконто.Ключ, КэшВидыСоставныхСубконто) Тогда
				Проводка.СубконтоДт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			
			Если НЕ ЗначениеЗаполнено(Субконто.Значение) 
				И Субконто.Значение <> Неопределено 
				И СоставнойТипСубконто(Субконто.Ключ, КэшВидыСоставныхСубконто) Тогда
				Проводка.СубконтоКт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
			
		КонецЦикла;
				
	КонецЦикла;
	
КонецПроцедуры

Функция СоставнойТипСубконто(ВидСубконто, КэшВидыСоставныхСубконто)
	
	Составной = КэшВидыСоставныхСубконто.Получить(ВидСубконто);
	
	Если Составной = Неопределено Тогда
		Составной = ВидСубконто.ТипЗначения.Типы().Количество() > 1;
		КэшВидыСоставныхСубконто.Вставить(ВидСубконто, Составной);
	КонецЕсли;
	
	Возврат Составной;
	
КонецФункции

Процедура ПроверитьЗаполнениеРеквизитов(Проводка, Ошибки, Отказ)
	
	Если Не ЗначениеЗаполнено(Проводка.СчетДт) Тогда
		
		Отказ = Истина;
		Ошибки.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Проводка № %1 <%2>: не заполнен счет дебета (ЕПС).", 
			Проводка.НомерСтроки + 1,
			Проводка.Содержание));
		
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Проводка.СчетКт) Тогда
		
		Отказ = Истина;
		Ошибки.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Проводка № %1 <%2>: не заполнен счет кредита (ЕПС).", 
			Проводка.НомерСтроки + 1,
			Проводка.Содержание));
		
	КонецЕсли; 
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проводка.СчетДт, "ЗапретитьИспользоватьВПроводках") = Истина Тогда
		
		Отказ = Истина;
		Ошибки.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Проводка № %1 <%2>: счет %3 запрещено использовать в проводках", 
			Проводка.НомерСтроки + 1,
			Проводка.Содержание,
			Проводка.СчетДт));
			
	КонецЕсли; 
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проводка.СчетКт, "ЗапретитьИспользоватьВПроводках") = Истина Тогда
		
		Отказ = Истина;
		Ошибки.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Проводка № %1 <%2>: счет %3 запрещено использовать в проводках", 
			Проводка.НомерСтроки + 1,
			Проводка.Содержание,
			Проводка.СчетКт));
			
	КонецЕсли; 
	
КонецПроцедуры

Процедура УстановитьЛицевойСчет(Проводка, Регистратор, КэшПоискаЛицевыхСчетов, Отказ)
	
	Если Не ЗначениеЗаполнено(Проводка.ЛицевойСчетДт) Тогда
		УчетЕПС.УстановитьЛицевойСчетВПроводку(Проводка, Регистратор, "Дт", КэшПоискаЛицевыхСчетов);	
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Проводка.ЛицевойСчетКт) Тогда 
		УчетЕПС.УстановитьЛицевойСчетВПроводку(Проводка, Регистратор, "Кт", КэшПоискаЛицевыхСчетов);	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьКорректностьЛицевыхСчетов(Ошибки, Отказ)
	
	Проводки = ЭтотОбъект.Выгрузить(, "НомерСтроки, Портфель, ЛицевойСчетДт, ЛицевойСчетКт, СчетДт, СчетКт, Содержание");
	Для Каждого Проводка Из Проводки Цикл
		Проводка.СчетДт = УчетЕПСПовтИсп.СчетВторогоПорядка(Проводка.СчетДт);
		Проводка.СчетКт = УчетЕПСПовтИсп.СчетВторогоПорядка(Проводка.СчетКт);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Проводки", Проводки);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Проводки.НомерСтроки КАК НомерСтроки,
		|	Проводки.Портфель КАК Портфель,
		|	Проводки.ЛицевойСчетДт КАК ЛицевойСчетДт,
		|	Проводки.ЛицевойСчетКт КАК ЛицевойСчетКт,
		|	ВЫРАЗИТЬ(Проводки.СчетДт КАК ПланСчетов.ЕПС) КАК СчетДт,
		|	ВЫРАЗИТЬ(Проводки.СчетКт КАК ПланСчетов.ЕПС) КАК СчетКт,
		|	Проводки.Содержание КАК Содержание
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	&Проводки КАК Проводки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""портфелем"" КАК ОписаниеОшибки,
		|	""Дт"" КАК ДтКт,
		|	ВТ_Проводки.НомерСтроки КАК НомерСтроки,
		|	ВТ_Проводки.Портфель КАК ПортфельВПроводке,
		|	ВТ_Проводки.ЛицевойСчетДт КАК ЛицевойСчетДт,
		|	ВТ_Проводки.ЛицевойСчетКт КАК ЛицевойСчетКт,
		|	ВТ_Проводки.СчетДт КАК СчетДт,
		|	ВТ_Проводки.СчетКт КАК СчетКт,
		|	ВТ_Проводки.Содержание КАК Содержание,
		|	ЛицевыеСчетаЕПС.Владелец КАК СчетВторогоПорядкаВЛицевомСчете,
		|	ЛицевыеСчетаЕПС.Портфель КАК ПортфельВЛицевомСчете
		|ИЗ
		|	ВТ_Проводки КАК ВТ_Проводки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.уа_ЛицевыеСчетаЕПС КАК ЛицевыеСчетаЕПС
		|		ПО ВТ_Проводки.ЛицевойСчетДт = ЛицевыеСчетаЕПС.Ссылка
		|ГДЕ
		|	ЛицевыеСчетаЕПС.Портфель <> ВТ_Проводки.Портфель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""портфелем"",
		|	""Кт"",
		|	ВТ_Проводки.НомерСтроки,
		|	ВТ_Проводки.Портфель,
		|	ВТ_Проводки.ЛицевойСчетДт,
		|	ВТ_Проводки.ЛицевойСчетКт,
		|	ВТ_Проводки.СчетДт,
		|	ВТ_Проводки.СчетКт,
		|	ВТ_Проводки.Содержание,
		|	ЛицевыеСчетаЕПС.Владелец,
		|	ЛицевыеСчетаЕПС.Портфель
		|ИЗ
		|	ВТ_Проводки КАК ВТ_Проводки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.уа_ЛицевыеСчетаЕПС КАК ЛицевыеСчетаЕПС
		|		ПО ВТ_Проводки.ЛицевойСчетКт = ЛицевыеСчетаЕПС.Ссылка
		|ГДЕ
		|	ЛицевыеСчетаЕПС.Портфель <> ВТ_Проводки.Портфель";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Отказ = Истина;
		Проводка = Результат.Выбрать();
		Пока Проводка.Следующий() Цикл
			Ошибки.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"Проводка № %1 <%2>: подобран лицевой счет %3 %4 с неверным %5", 
				Проводка.НомерСтроки,
				Проводка.Содержание,
				Проводка.ДтКт,
				Проводка["ЛицевойСчет" + Проводка.ДтКт],
				Проводка.ОписаниеОшибки));
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиОшибкиПользователю(Ошибки, Регистратор)
	
	ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Документ %1", Регистратор);
	
	Для Каждого Текст Из Ошибки Цикл
		ТекстОшибки = ТекстОшибки + Символы.ПС + Текст;	
	КонецЦикла; 
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстОшибки;
	Сообщение.Сообщить();

КонецПроцедуры

#КонецОбласти

#КонецЕсли

